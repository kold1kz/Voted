{"version":3,"sources":["pages/employee/pages/turnoutInput/styles.module.scss","pages/employee/styles.module.scss","components/ResultsList/styles.module.scss","pages/main/pages/candidatesList/styles.module.scss","pages/main/pages/results/styles.module.scss","components/FormInput/styles.module.scss","store/reducers/authReducer/types.ts","store/reducers/authReducer/index.ts","store/reducers/index.ts","api/votingService.ts","store/index.ts","store/reducers/authReducer/action-creators.ts","img/header-logo.svg","context/timeContext.ts","components/Header/ClockTime.tsx","components/Header/Header.tsx","hooks/useTypedSelector.ts","utils/history.ts","components/FormButton/FormButton.tsx","pages/employee/pages/finalScreen/FinalScreen.tsx","components/LoadingSpinner/LoadingSpinner.tsx","components/Modal.tsx","components/ConfirmPopup/ConfirmPopup.tsx","img/alert.svg","components/ErrorAlert/ErrorAlert.tsx","components/FormInput/FormInput.tsx","pages/employee/pages/protocolInput/ProtocolInput.tsx","pages/employee/pages/turnoutInput/timePeriods.ts","pages/employee/pages/turnoutInput/TurnoutInput.tsx","pages/employee/Employee.tsx","store/reducers/action-creators.ts","hooks/useActions.ts","img/eye-label.svg","img/login-page-logo.svg","pages/login/Login.tsx","img/user.svg","components/PhotosList/PhotoItem/PhotoItem.tsx","components/PhotosList/PhotosList.tsx","pages/main/pages/candidatesList/CandidatesList.tsx","hooks/useWindowDimensions.ts","components/ResultsList/ResultItem/ResultItem.tsx","components/ResultsList/ResultsList.tsx","hooks/useInterval.ts","routes/index.ts","pages/main/pages/results/Results.tsx","components/TurnoutList/TurnoutItem/TurnoutItem.tsx","components/TurnoutList/TurnoutList.tsx","pages/main/pages/turnout/Turnout.tsx","pages/main/Main.tsx","pages/notFound/NotFound.tsx","components/AppRouter.tsx","components/DevTimeInput/DevTimeInput.tsx","App.tsx","hooks/useDate.ts","index.tsx","pages/login/styles.module.scss","components/ResultsList/ResultItem/styles.module.scss","components/TurnoutList/styles.module.scss","components/ConfirmPopup/styles.module.scss","components/ErrorAlert/styles.module.scss","components/PhotosList/PhotoItem/styles.module.scss","components/Header/styles.module.scss","pages/employee/pages/finalScreen/styles.module.scss","components/PhotosList/styles.module.scss","components/TurnoutList/TurnoutItem/styles.module.scss","pages/main/pages/turnout/styles.module.scss","pages/employee/pages/protocolInput/styles.module.scss","components/FormButton/styles.module.scss","components/LoadingSpinner/styles.module.scss","pages/main/styles.module.scss","pages/notFound/styles.module.css","components/DevTimeInput/styles.module.scss"],"names":["module","exports","AuthActionsEnum","initialState","access_token","isRefreshing","isTryingToLogin","errorRefreshing","errorLogin","isFirstRefreshDone","API_URLS","auth","state","action","type","CLEAR_AUTH_ACTION","SAVE_NEW_TOKEN_ACTION","payload","IS_REFRESHING_ACTION","IS_TRYING_LOGIN_ACTION","ERROR_REFRESH_ACTION","ERROR_LOGIN_ACTION","rootReducer","combineReducers","reducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","AuthActionCreators","clearAuthState","saveNewToken","setIsRefreshing","setIsTryingLogin","isTryingLogin","setLoginError","error","setRefreshingError","fetchRefreshTokens","dispatch","a","VotingService","refreshTokens","result","data","message","fetchLogin","login","password","setTimeout","fetchLogout","logout","api","axios","create","baseURL","process","withCredentials","headers","interceptors","response","use","undefined","Promise","_","reject","status","config","url","LOGIN","REFRESH_TOKENS","res","Authorization","request","get","post","TURNOUT_INFO","turnout","client_add_time","processed_bulletins","spoiled_bulletins","candidates","CANDIDATES_INFO","CHECK_PROTOCOL","CANDIDATES_AND_AREAS_INFO","GET_VOTING_DATE","DISTRICTS_TURNOUT","RESULTS_INFO","LOGOUT","TimeContext","createContext","displayName","ClockTime","time","useContext","hours","minutes","Header","memo","isHideClocks","className","classNames","styles","src","HeaderLogoSvg","alt","useTypedSelector","useSelector","createBrowserHistory","FormButton","disabled","children","onClick","redColor","FinalScreen","isProtocolSent","useState","isLogout","setIsLogout","makeLogout","document","location","reload","LoadingSpinner","isPrimaryColor","Modal","createElement","modalRoot","useEffect","body","appendChild","removeChild","ReactDOM","createPortal","ConfirmPopup","onConfirm","onClose","title","isSubmitting","ErrorAlert","props","AlertSvg","header","description","FormInput","showPassword","setShowPassword","hideLabel","htmlFor","id","labelName","classNameForInput","placeholder","value","onChange","onBlur","showError","hasIcon","name","required","iconUrl","prev","classNameForError","useErrorDisplay","errorMessage","ProtocolInput","setIsProtocolSent","setCandidates","isDevNextDaySet","isLoading","setIsLoading","isError","setIsError","isSendingError","setIsSendingError","isPopupOpen","setIsPopupOpen","isSendingResults","setIsSendingResults","maxPeople","turnoutResults","setTurnoutResults","closePopup","setSubmitting","sendResults","resetForm","sendResultsInfo","console","fetchInfo","getCandidatesInfo","resultCandidates","getTurnoutInfo","resultTurnout","va_data","reduce","current","count_voters","max_people","history","push","validationSchema","yup","shape","bulletinsCount","typeError","min","max","test","candidatesVotesCount","this","options","context","candidateVotes","spoiledBulletinsCount","of","initialValues","map","item","validate","values","validateYupSchema","err","yupToFormErrors","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","isValid","render","index","fullName","candidate","split","resultsObj","candidate_id","count_votes","find","val","timePeriods","tableTime","count","available","from","to","withNextDay","partOfDay","TurnoutInput","votingAreaId","info","setInfo","isSendingTurnout","setIsSendingTurnout","timePeriodsInfo","setTimePeriodsInfo","getCurrentPeriod","isNextDay","currentPeriodInfo","setCurrentPeriodInfo","sendTurnout","votersCount","sendTurnoutInfo","fetchInfoSilent","refreshTimePeriodsInfo","fetched","updatedFetchedInfo","obj","newPeriods","oldInfo","length","voting_area_id","minVotersCount","maxValue","forEach","isInputAccessibleByTime","filter","style","margin","Employee","checkProtocol","checkProtocolIsSent","protocolExists","path","component","allActionCreators","useActions","useDispatch","bindActionCreators","Login","trim","LogoSvg","EyeSvg","PhotoItem","consigment","photo","PhotoExample","slice","join","PhotosList","CandidatesList","isOpenedCount","peopleCount","areasInfo","setAreasInfo","beautyNumber","reverse","getCandidatesAndAreasInfo","count_opened","count_people","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","ResultItem","setStyle","isMobileScreen","ResultsList","documentElement","clientWidth","setMobileScreen","sort","b","useInterval","RouteNames","callback","delay","intervalRef","useRef","savedCallback","setInterval","clearInterval","Results","checked_bulletins","votesInfo","setVotesInfo","getResultsInfo","checked_bulletins_percentage","candidate_results","silentFetchInfo","log","TurnoutItem","turnoutInfo","district","Math","floor","TurnoutList","setTurnout","fetchTurnout","getDistrictsTurnout","districts_turnout","fetchTurnoutSilent","Turnout","Main","votingDate","getDay","Date","pathname","publicRoutes","MAIN_PAGE","exact","MAIN_PAGE_SCREENS","LOGIN_PAGE","privateRoutes","EMPLOYEE_PAGE","NotFound","AppRouter","route","DevTimeInput","setHours","setMinutes","setIsNextDay","isDevUsing","setIsDevUsing","setCustomTime","clearCustomTime","savedHours","localStorage","getItem","savedMinutes","realTimeSeconds","savedIsNextDay","parseInt","toString","e","preventDefault","getTime","setItem","currentTarget","checked","removeItem","App","date","setDate","setVotingDate","devTime","setDevTime","setIsDevNextDaySet","fetchVotingDate","getVotingDate","voting_date","updateDevTime","curTime","currentTime","passedSeconds","realTimeInSeconds","passedHours","passedMinutes","getFullYear","getMonth","getSeconds","getHours","getMinutes","useDate","includes","Provider","StrictMode","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,6BAA6B,cAAgB,8BAA8B,aAAa,2BAA2B,YAAY,0BAA0B,gBAAkB,gCAAgC,gBAAgB,8BAA8B,gBAAgB,8BAA8B,kBAAkB,gCAAgC,wBAAwB,sCAAsC,4BAA4B,0CAA0C,QAAU,wBAAwB,cAAc,4BAA4B,2BAA2B,yCAAyC,yBAAyB,uCAAuC,+BAA+B,6CAA6C,0BAA0B,wCAAwC,kCAAkC,gDAAgD,cAAc,4BAA4B,4BAA4B,0CAA0C,iCAAiC,+CAA+C,+BAA+B,6CAA6C,gCAAgC,gD,oBCA1vCD,EAAOC,QAAU,CAAC,gBAAgB,8BAA8B,wBAAwB,wC,oBCAxFD,EAAOC,QAAU,CAAC,eAAe,6BAA6B,qBAAqB,mCAAmC,sBAAsB,oCAAoC,aAAa,2BAA2B,YAAY,4B,+DCApOD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,2BAA2B,yCAAyC,2BAA2B,yCAAyC,qBAAqB,mCAAmC,sBAAsB,oCAAoC,8BAA8B,4CAA4C,iBAAmB,iCAAiC,kBAAoB,kCAAkC,aAAa,2BAA2B,YAAY,4B,mBCA5hBD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,oBAAsB,oCAAoC,KAAO,qBAAqB,aAAe,6BAA6B,cAAgB,8BAA8B,cAAgB,8BAA8B,eAAiB,+BAA+B,aAAa,2BAA2B,YAAY,4B,mBCAtXD,EAAOC,QAAU,CAAC,aAAa,2BAA2B,oBAAoB,kCAAkC,4BAA4B,0CAA0C,oBAAoB,kCAAkC,8BAA8B,4CAA4C,0BAA0B,wCAAwC,yBAAyB,uCAAuC,oBAAoB,kCAAkC,4BAA4B,0CAA0C,4BAA4B,4C,mDCQpkBC,E,4KAAAA,K,sCAAAA,E,8CAAAA,E,4CAAAA,E,gDAAAA,E,wCAAAA,E,6CAAAA,M,KCPZ,IAAMC,EAA0B,CAC9BC,aAAc,KACdC,cAAc,EACdC,iBAAiB,EACjBC,gBAAiB,KACjBC,WAAY,KACZC,oBAAoB,GCNP,ICaHC,EDbG,GACbC,KDQa,WAGD,IAFZC,EAEW,uDAFHT,EACRU,EACW,uCACX,OAAQA,EAAOC,MACb,KAAKZ,EAAgBa,kBACnB,OAAO,2BAAKZ,GAAZ,IAA0BM,oBAAoB,IAChD,KAAKP,EAAgBc,sBACnB,OAAO,2BAAKJ,GAAZ,IAAmBR,aAAcS,EAAOI,QAASR,oBAAoB,IACvE,KAAKP,EAAgBgB,qBACnB,OAAO,2BAAKN,GAAZ,IAAmBP,aAAcQ,EAAOI,UAC1C,KAAKf,EAAgBiB,uBACnB,OAAO,2BAAKP,GAAZ,IAAmBN,gBAAiBO,EAAOI,UAC7C,KAAKf,EAAgBkB,qBACnB,OAAO,2BAAKR,GAAZ,IAAmBL,gBAAiBM,EAAOI,UAC7C,KAAKf,EAAgBmB,mBACnB,OAAO,2BAAKT,GAAZ,IAAmBJ,WAAYK,EAAOI,UACxC,QACE,OAAOL,KGvBPU,EAAcC,0BAAgBC,GAEvBC,EAAQC,sBACnBJ,EACAK,8BAAoBC,0BAAgBC,OCIzBC,EAAqB,CAChCC,eAAgB,iBAAwB,CACtCjB,KAAMZ,EAAgBa,oBAExBiB,aAAc,SAAC5B,GAAD,MAA+C,CAC3DU,KAAMZ,EAAgBc,sBACtBC,QAASb,IAEX6B,gBAAiB,SAAC5B,GAAD,MAAwD,CACvES,KAAMZ,EAAgBgB,qBACtBD,QAASZ,IAEX6B,iBAAkB,SAACC,GAAD,MAAuD,CACvErB,KAAMZ,EAAgBiB,uBACtBF,QAASkB,IAEXC,cAAe,SAACC,GAAD,MAAgD,CAC7DvB,KAAMZ,EAAgBmB,mBACtBJ,QAASoB,IAEXC,mBAAoB,SAACD,GAAD,MAAqD,CACvEvB,KAAMZ,EAAgBkB,qBACtBH,QAASoB,IAEXE,mBAAoB,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEAEtBD,EAASV,EAAmBG,iBAAgB,IAC5CO,EAASV,EAAmBQ,mBAAmB,OAHzB,SAIDI,EAAcC,gBAJb,OAIhBC,EAJgB,OAKtBJ,EAASV,EAAmBE,aAAaY,EAAOC,KAAKzC,eACrDoC,EAASV,EAAmBG,iBAAgB,IANtB,kDAQtBO,EAASV,EAAmBC,kBAC5BS,EACEV,EAAmBQ,mBAAmB,KAA8BQ,UAVhD,0DAAN,uDAcpBC,WAAY,SAACC,EAAeC,GAAhB,8CAAqC,WAAOT,GAAP,eAAAC,EAAA,sEAE7CD,EAASV,EAAmBI,kBAAiB,IAC7CM,EAASV,EAAmBM,cAAc,OAHG,SAIxBM,EAAcM,MAAMA,EAAOC,GAJH,OAIvCL,EAJuC,OAK7CJ,EAASV,EAAmBE,aAAaY,EAAOC,KAAKzC,eACrDoC,EAASV,EAAmBI,kBAAiB,IANA,kDAQ7CM,EAASV,EAAmBI,kBAAiB,IAC7CM,EAASV,EAAmBM,cAAc,KAA8BU,UACxEI,YAAW,WACTV,EAASV,EAAmBM,cAAc,SACzC,KAZ0C,0DAArC,uDAeZe,YAAa,yDAAM,WAAOX,GAAP,SAAAC,EAAA,sEAEfD,EAASV,EAAmBI,kBAAiB,IAF9B,SAGTQ,EAAcU,SAHL,OAIfZ,EAASV,EAAmBC,kBAJb,gDAMfS,EAASV,EAAmBC,kBANb,yDAAN,wDF9DPS,EAAaf,EAAbe,SAEFa,EAAMC,IAAMC,OAAO,CACvBC,QAASC,0DACTC,iBAAiB,EACjBC,QAAS,CACP,eAAgB,uB,SAIRjD,K,sCAAAA,E,oBAAAA,E,sBAAAA,E,+CAAAA,E,uCAAAA,E,wBAAAA,E,6BAAAA,E,gCAAAA,E,+BAAAA,E,kCAAAA,M,KAaZ2C,EAAIO,aAAaC,SAASC,SAAIC,EAA9B,+BAAAtB,EAAA,MAAyC,WAAOJ,GAAP,eAAAI,EAAA,yDAClCJ,EAAMwB,SAD4B,yCAE9B,IAAIG,SAAQ,SAACC,EAAGC,GACrBA,EAAO7B,OAH4B,UAOT,MAA1BA,EAAMwB,SAASM,OAPoB,oBAQjC9B,EAAMwB,SAASO,OAAOC,MAAQ3D,EAAS4D,MARN,yCAS5B,IAAIN,SAAQ,SAACC,EAAGC,GACrBA,EAAO7B,OAV0B,UAY1BA,EAAMwB,SAASO,OAAOC,MAAQ3D,EAAS6D,eAZb,wBAanC/B,EAASV,EAAmBC,kBAbO,kBAc5B,IAAIiC,SAAQ,SAACC,EAAGC,GACrBA,EAAO7B,OAf0B,mCAmBfK,EAAcC,gBAnBC,eAmB3B6B,EAnB2B,OAoBjChC,EAASV,EAAmBE,aAAawC,EAAI3B,KAAKzC,eAClDiC,EAAM+B,OAAOT,QAAQc,cAArB,iBAA+CD,EAAI3B,KAAKzC,cArBvB,kBAsB1BiD,EAAIqB,QAAQrC,EAAM+B,SAtBQ,4DAwB1B,IAAIJ,SAAQ,SAACC,EAAGC,GACrBA,EAAO7B,OAzBwB,yDA8B9B,IAAI2B,SAAQ,SAACC,EAAGC,GACrBA,EAAO7B,OA/B4B,2DAAzC,uD,IAoCqBK,E,yIACnB,uGACSW,EAAIsB,IAA8BjE,EAAS6D,iBADpD,2C,gHAGA,WACEvB,EACAC,GAFF,0FAISI,EAAIuB,KAA+BlE,EAAS4D,MAAO,CACxDtB,QACAC,cANJ,2C,yHAUA,WAAyB7C,GAAzB,0FACSiD,EAAIsB,IAAS,aAAc,CAChChB,QAAS,CACPc,cAAc,UAAD,OAAYrE,OAH/B,2C,0HAQA,WAA4BA,GAA5B,0FAaSiD,EAAIsB,IAURjE,EAASmE,aAAc,CACxBlB,QAAS,CACPc,cAAc,UAAD,OAAYrE,OAzB/B,2C,2HA8BA,WACEA,EACA0E,EACAC,GAHF,0FAKS1B,EAAIuB,KACTlE,EAASmE,aACT,CACEC,UACAC,mBAEF,CACEpB,QAAS,CACPc,cAAc,UAAD,OAAYrE,OAbjC,2C,+HAmBA,WACEA,EACA4E,EACAC,EACAC,GAJF,0FASS7B,EAAIuB,KACTlE,EAASyE,gBACT,CACEH,sBACAC,oBACAC,cAEF,CACEvB,QAAS,CACPc,cAAc,UAAD,OAAYrE,OAlBjC,2C,mIAwBA,WAA+BA,GAA/B,0FAKSiD,EAAIsB,IAERjE,EAASyE,gBAAiB,CAC3BxB,QAAS,CACPc,cAAc,UAAD,OAAYrE,OAT/B,2C,+HAcA,WAAiCA,GAAjC,0FAKSiD,EAAIsB,IAERjE,EAAS0E,eAAgB,CAC1BzB,QAAS,CACPc,cAAc,UAAD,OAAYrE,OAT/B,2C,qIAcA,uGAOSiD,EAAIsB,IAIRjE,EAAS2E,4BAXd,2C,wHAcA,uGAKShC,EAAIsB,IAERjE,EAAS4E,kBAPd,2C,8HAUA,uGACSjC,EAAIsB,IAKRjE,EAAS6E,oBANd,2C,yHASA,uGAOSlC,EAAIsB,IAIRjE,EAAS8E,eAXd,2C,iHAcA,uGACSnC,EAAIsB,IAAyBjE,EAAS+E,SAD/C,2C,6EG1Oa,MAA0B,wCCenCC,EAAcC,wBAAc,IAElCD,EAAYE,YAAc,cAEXF,Q,OCLAG,EAVO,WACpB,IAAQC,EAASC,qBAAWL,GAApBI,KACR,OACE,qCACGA,EAAKE,MAAQ,GAAK,IAAMF,EAAKE,MAAQF,EAAKE,MAD7C,IAEGF,EAAKG,QAAU,GAAK,IAAMH,EAAKG,QAAUH,EAAKG,Y,iBCyBtCC,EAtBiBC,gBAAK,YAGjC,IAAD,IAFDC,oBAEC,SADDC,EACC,EADDA,UAEA,OACE,yBAAQA,UAAWC,IAAWC,IAAM,OAAYF,GAAwB,MAAxE,UACE,mBACEA,UAAWC,IACTC,IAAM,cACNH,EAAeG,IAAM,qBAA2B,MAHpD,SAKE,cAAC,EAAD,MAEF,qBACEC,IAAKC,EACLC,IAAI,8HACJL,UAAWE,IAAM,qBCxBZI,EAAoDC,I,QCFlDC,gB,iBCoCAC,EAxByB,SAAC,GAOlC,IANLhG,EAMI,EANJA,KACAuF,EAKI,EALJA,UACAU,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,SAEA,OACE,wBACEpG,KAAMA,EACNuF,UAAWC,IACTC,IAAO,eACPW,EAAWX,IAAO,yBAA2B,KAC7CF,EACAU,EAAWR,IAAO,0BAA4B,MAEhDQ,WAAYA,EACZE,QAASA,EATX,SAUGD,K,iBCOQG,EA9B2B,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,eAC3C,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAU,uCAAG,sBAAA/E,EAAA,6DACjB8E,GAAY,GADK,SAEX7E,EAAcU,SAFH,OAGjBmE,GAAY,GACZE,SAASC,SAASC,SAJD,2CAAH,qDAOhB,OACE,qBAAKtB,UAAWE,IAAM,QAAtB,SACE,sBAAKF,UAAWE,IAAM,eAAtB,UACE,oBAAGF,UAAWE,IAAM,cAApB,UACGa,EACG,gGACA,oNAA2C,OAEjD,cAAC,EAAD,CACEtG,KAAK,SACLmG,QAASO,EACTT,SAAUO,EACVjB,UAAWE,IAAM,cAJnB,kD,4CCPOqB,GAXiC,SAAC,GAAmC,IAAjCvB,EAAgC,EAAhCA,UAAWwB,EAAqB,EAArBA,eAC5D,OACE,qBACExB,UAAWC,IACTC,KAAM,QACNsB,EAAiBtB,KAAO,yBAA2B,KACnDF,GAAwB,SCTnByB,GAAQ,SAAC,GAA8B,IAA5Bd,EAA2B,EAA3BA,SACtB,EAAoBK,mBAASI,SAASM,cAAc,QAA7CC,EAAP,oBAOA,OANAC,qBAAU,WAER,OADAR,SAASS,KAAKC,YAAYH,GACnB,WACLP,SAASS,KAAKE,YAAYJ,MAE3B,IACIK,IAASC,aAAatB,EAAUgB,I,oBCsC1BO,GAtC6B,SAAC,GAMtC,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,MACA1B,EAEI,EAFJA,SACA2B,EACI,EADJA,aAEA,OACE,cAAC,GAAD,UACE,qBAAKtC,UAAWE,KAAM,kBAAtB,SACE,sBAAKF,UAAWE,KAAM,eAAtB,UACE,sBAAKF,UAAWE,KAAM,aAAtB,UACGmC,EACA1B,GAAYA,KAGf,sBAAKX,UAAWE,KAAO,wBAAvB,UACE,cAAC,EAAD,CACEzF,KAAM,SACNmG,QAASwB,EACTvB,UAAQ,EACRb,UAAWE,KAAM,cAJnB,kDAOA,cAAC,EAAD,CACEzF,KAAM,SACNmG,QAASuB,EACTzB,SAAU4B,EACVtC,UAAWE,KAAM,cAJnB,SAKGoC,EAAe,cAAC,GAAD,IAAqB,kFC5CpC,OAA0B,kC,oBC4B1BC,GAhByB,SAACC,GACvC,OACE,sBACExC,UAAWC,IACTC,KAAO,eACPsC,EAAMxC,UAAYwC,EAAMxC,UAAY,MAHxC,UAKE,qBAAKG,IAAKsC,GAAUpC,IAAI,YAAYL,UAAWE,KAAO,uBACtD,sBAAKF,UAAWE,KAAO,wBAAvB,UACE,sBAAMF,UAAWE,KAAO,uBAAxB,SAAiDsC,EAAME,SACvD,sBAAM1C,UAAWE,KAAO,4BAAxB,SAAsDsC,EAAMG,qB,oBCiErDC,GA5DuB,SAACJ,GACrC,MAAwCxB,oBAAS,GAAjD,mBAAO6B,EAAP,KAAqBC,EAArB,KACA,OACE,sBACE9C,UAAWC,IACTC,KAAO,cACPsC,EAAMxC,UAAYwC,EAAMxC,UAAY,MAHxC,UAKIwC,EAAMO,UAIJ,KAHF,uBAAOC,QAASR,EAAMS,GAAIjD,UAAWE,KAAO,qBAA5C,SACGsC,EAAMU,YAIX,sBACElD,UAAWC,IACTC,KAAO,6BACPsC,EAAMW,kBAAoBX,EAAMW,kBAAoB,MAHxD,UAKE,uBACE1I,KAAMoI,EAAe,OAASL,EAAM/H,KACpC2I,YAAaZ,EAAMY,aAAe,GAClCC,MAAOb,EAAMa,MACbC,SAAUd,EAAMc,SAChBC,OAAQf,EAAMe,OACdvD,UAAWC,IACTC,KAAO,qBACPsC,EAAMgB,UAAYtD,KAAO,2BAA6B,KACtDsC,EAAMiB,QAAUvD,KAAO,+BAAiC,MAE1D+C,GAAIT,EAAMS,GACVS,KAAMlB,EAAMkB,KACZC,SAAUnB,EAAMmB,SAChBjD,WAAY8B,EAAM9B,WAEnB8B,EAAMiB,SAAWjB,EAAMoB,QACtB,qBACEzD,IAAKqC,EAAMoB,QACXvD,IAAI,GACJL,UAAWE,KAAO,0BAClBU,QAAS,WACPkC,GAAgB,SAACe,GAAD,OAAWA,QAG7B,QAGN,uBACE7D,UAAWC,IACTC,KAAO,qBACPsC,EAAMsB,kBAAoBtB,EAAMsB,kBAAoB,KACpDtB,EAAMuB,gBAAkB7D,KAAO,6BAA+B,KAC9DsC,EAAMgB,UAAYtD,KAAO,6BAA+B,MAL5D,SAOGsC,EAAMwB,mB,mBCyUAC,GAtYkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,kBAC1BnK,EAAiBuG,GAAiB,SAAC/F,GAAD,OAAWA,EAAMD,QAAnDP,aACR,EAAoCiH,mBAKlC,IALF,mBAAOnC,EAAP,KAAmBsF,EAAnB,KAOA,EAGIzE,qBAAWL,GAHf,IACEI,KAAQG,EADV,EACUA,QAASD,EADnB,EACmBA,MACjByE,EAFF,EAEEA,gBAGF,EAAkCpD,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAA8BtD,oBAAS,GAAvC,mBAAOuD,EAAP,KAAgBC,EAAhB,KACA,EAA4CxD,oBAAS,GAArD,mBAAOyD,EAAP,KAAuBC,EAAvB,KACA,EAAsC1D,oBAAS,GAA/C,mBAAO2D,EAAP,KAAoBC,EAApB,KACA,EAAgD5D,oBAAS,GAAzD,mBAAO6D,EAAP,KAAyBC,EAAzB,KAEA,EAA4C9D,mBAAS,CACnDvC,QAAS,EACTsG,UAAW,IAFb,mBAAOC,EAAP,KAAuBC,EAAvB,KAKMC,EAAa,SAACC,GAClBP,GAAe,GACfO,GAAc,IAGVC,EAAW,uCAAG,WAClB5I,EAQA2I,EACAE,GAVkB,SAAAjJ,EAAA,sEAahBsI,GAAkB,GAClBI,GAAoB,GAdJ,SAeVzI,EAAciJ,gBAClBvL,EACAyC,EAAKmC,oBACLnC,EAAKoC,kBACLpC,EAAKqC,YAnBS,OAqBhBwG,IACAP,GAAoB,GACpBI,EAAWC,GACXjB,GAAkB,GAxBF,kDA0BhBY,GAAoB,GACpBJ,GAAkB,GAClBa,QAAQvJ,MAAR,MA5BgB,0DAAH,0DAgCXwJ,EAAS,uCAAG,8BAAApJ,EAAA,sEAEdkI,GAAa,GACbE,GAAW,GAHG,SAIkBnI,EAAcoJ,kBAAkB1L,GAJlD,cAIR2L,EAJQ,OAKXlJ,KALW,SAMeH,EAAcsJ,eAAe5L,GAN5C,OAMR6L,EANQ,OAM4DpJ,KAE1EyI,EAAkB,CAChBxG,QAASmH,EAAcC,QAAQC,QAC7B,SAACjC,EAAMkC,GAAP,OAAoBlC,EAAOkC,EAAQC,aAAeD,EAAQC,aAAenC,IACzE,GAEFkB,UAAWa,EAAcK,aAE3B9B,EAAcuB,EAAiB7G,YAC/ByF,GAAa,GAhBC,kDAkBdE,GAAW,GACXF,GAAa,GAnBC,0DAAH,qDAsCf1C,qBAAU,WACR4D,MACC,IAEH5D,qBAAU,WACJwC,IAAoBzE,EAAQ,GAAgB,IAAVA,GAAeC,GAAW,MAC9DsE,GAAkB,GAClBgC,EAAQC,KAAK,2BAEd,CAACvG,EAASD,EAAOyE,IAEpB,IAAMgC,GAAmBC,MAAaC,MAAM,CAC1CC,eAAgBF,MAEbG,UAAU,sGACVC,IAAI,EAAG,+GACPC,IACC1B,EAAevG,QALH,+LAM2BuG,EAAevG,QAN1C,yBAQbkI,KACC,kBACA,uSACA,SAAUtD,GACR,IAAMuD,EAAuBC,KAAKC,QAAQC,QAASC,eAAelB,QAChE,SAACjC,EAAckC,GAAf,OAA8ClC,EAAOkC,EAAQ1C,QAC7D,GAEF,OACEA,IACAwD,KAAKC,QAAQC,QAASE,sBAAwBL,KAMnDjD,SAAS,qGACZsD,sBAAuBZ,MAEpBG,UAAU,sGACVC,IAAI,EAAG,+GACP9C,SAAS,qGACTgD,KAAK,mBAAoB,4LAAsC,SAAUtD,GACxE,QAAIA,EAASwD,KAAKC,QAAQC,QAASR,mBAGvCS,eAAgBX,MAEba,GACCb,MAAaC,MAAM,CACjBjD,MAAOgD,MAEJG,UAAU,sGACVC,IAAI,EAAG,+GACP9C,SAAS,qGACTgD,KACC,iBACA,4LACA,SAAUtD,GACR,QAAIA,EAASwD,KAAKC,QAAQC,QAASR,sBAM5C5C,SAAS,8JAEd,OACE,qBACE3D,UAAWC,IACTC,KAAM,SACNqE,GAAWF,EAAYnE,KAAM,eAAqB,MAHtD,SAKGmE,EACC,cAAC,GAAD,CAAgBrE,UAAWE,KAAM,iBAAsBsB,gBAAc,IACnE+C,EACF,sBAAKvE,UAAWE,KAAM,gBAAtB,UACE,sBAAMF,UAAWE,KAAO,cAAxB,kSAGA,cAAC,EAAD,CACEzF,KAAK,SACLiG,UAAU,EACVV,UAAWE,KAAO,aAClBU,QAAS4E,EAJX,oIASF,cAAC,IAAD,CACE2B,cAAe,CACbZ,eAAgB,EAChBU,sBAAuB,EACvBD,eAAe,YAAKnI,EAAWuI,KAAI,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBhE,MAAO,SAElEiE,SAAU,SAACC,GACT,IACEC,YAAkBD,EAAQnB,IAAkB,EAAMmB,GAClD,MAAOE,GACP,OAAOC,YAAgBD,KAG3BE,SAAU,WACR/C,GAAe,IAdnB,SAgBG,gBACC2C,EADD,EACCA,OACAK,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACA1F,EAPD,EAOCA,aACA2F,EARD,EAQCA,QACA9C,EATD,EASCA,cACAE,EAVD,EAUCA,UAVD,OAYC,uBACEsC,SAAUK,EACVhI,UAAWC,IAAWC,KAAM,eAAoBA,KAAO,kBAFzD,UAGE,sBAAKF,UAAWC,IAAWC,KAAO,2BAAlC,UACE,sBACEF,UAAWC,IACTC,KAAO,4BACPA,KAAM,WAHV,UAKE,oBAAGF,UAAWE,KAAO,8BAArB,qHACqB,uBAAO,IAC1B,sBAAMF,UAAW,YAAjB,uFAFF,mEAIA,cAAC,GAAD,CACEkD,UAAU,2BACVD,GAAG,iBACHS,KAAK,iBACLjJ,KAAK,SACL4I,MAAOkE,EAAOhB,eACdjD,SAAUwE,EACVvE,OAAQwE,EACR/D,aAAc4D,EAAOrB,gBAAkB,GACvC5C,UAAQ,EACRH,aAAcqE,EAAQtB,iBAAkBqB,EAAOrB,gBAC/CxD,WAAS,EACT/C,UAAWE,KAAM,iBACjBiD,kBAAmBjD,KAAO,0BAC1B4D,kBAAmB5D,KAAO,4BAE5B,oBAAGF,UAAWE,KAAO,8BAArB,qHACqB,uBAAO,IAC1B,sBAAMF,UAAW,YAAjB,iFAFF,mEAIA,cAAC,GAAD,CACEkD,UAAU,2BACVD,GAAG,wBACHS,KAAK,wBACLjJ,KAAK,SACL4I,MAAOkE,EAAON,sBACd3D,SAAUwE,EACVvE,OAAQwE,EACR/D,aAAc4D,EAAOX,uBAAyB,GAC9CtD,UAAU,EACVH,aACKqE,EAAQZ,wBAAyBW,EAAOX,uBAE7ClE,WAAS,EACT/C,UAAWE,KAAM,iBACjBiD,kBAAmBjD,KAAO,0BAC1B4D,kBAAmB5D,KAAO,+BAG9B,sBACEF,UAAWC,IAAWC,KAAO,wBAAyBA,KAAM,OAD9D,UAEE,oBAAGF,UAAWE,KAAO,8BAArB,wDACU,sBAAMF,UAAW,YAAjB,0EADV,2HAIA,cAAC,IAAD,CACE0D,KAAK,iBACLwE,OAAQ,kBACN,qBAAKlI,UAAWE,KAAO,yBAAvB,SACGqH,EAAOP,eAAeI,KAAI,SAACC,EAAMc,GAAP,OACzB,sBAEEnI,UAAWC,IACTC,KAAO,sBACP0H,EAAOZ,gBAAkBY,EAAOZ,eAAemB,GAC3CjI,KAAO,4BACP,MANR,UAQE,uBACE8C,QAAO,yBAAoBmF,EAApB,KACPnI,UAAWE,KAAM,aAFnB,UA3MJkI,EA8MoBf,EAAKgB,UA5M3CD,EAASE,MAAM,KAAK,GACpB,IACAF,EAASE,MAAM,KAAK,GAAG,GACvB,KACAF,EAASE,MAAM,KAAK,GAAG,GACvB,OAyMsB,cAAC,IAAD,CACE7N,KAAK,SACLiJ,KAAI,yBAAoByE,EAApB,WACJlF,GAAE,yBAAoBkF,EAApB,KACFxE,UAAQ,EACR3D,UAAWE,KAAM,iBAjBdiI,GApMV,IAACC,gBA+NV,cAAC,GAAD,CACE1F,OAAO,wFACPC,YAAY,wMACZ3C,UAAWC,IACTC,KAAO,6BACPA,KAAO,uCAGX,oBACEF,UAAWC,IACTC,KAAO,4BACPA,KAAO,oCAHX,oLAKkC,sBAAMF,UAAW,YAAjB,gBAAwC,IAL1E,iCAMQ,OAER,cAAC,EAAD,CACEvF,KAAK,SACLiG,UAAWuH,GAAW3F,EACtBtC,UAAWE,KAAO,6BAHpB,oEAOCyE,EACC,cAAC,GAAD,CACErC,aAAcuC,EACdzC,QAAS,kBAAM8C,EAAWC,IAC1B9C,MACE,mBAAGrC,UAAWE,KAAO,eAArB,0OAIFiC,UAAW,WACT,IAAMoG,EAAa,CACjB5J,oBAAqB4I,EAAOhB,eAC5B3H,kBAAmB2I,EAAON,sBAC1BpI,WAAY0I,EAAOP,eAAeI,KAAI,SAACC,GAAD,MAAW,CAC/CmB,aAAcnB,EAAKmB,aACnBC,YAAapB,EAAKhE,WAGtB+B,EAAYmD,EAAYpD,EAAeE,IAjB3C,SAmBE,qCACE,sBAAKrF,UAAWE,KAAO,iBAAvB,UACE,sBAAKF,UAAWE,KAAO,6BAAvB,UACE,2GAAkBqH,EAAOhB,kBACzB,qGAAiBgB,EAAON,4BAE1B,qBAAKjH,UAAWE,KAAO,kCAAvB,SACGqH,EAAOP,eAAeI,KAAI,SAACC,GAAU,IAAD,EAtQnCe,EAuQA,OACE,6BAxQFA,EAyQmB,UACbb,EAAOP,eAAe0B,MACpB,SAACC,GAAD,OAASA,EAAIH,eAAiBnB,EAAKmB,uBAFxB,aACb,EAEGH,UA3QxBD,EAASE,MAAM,KAAK,GAAK,IAAMF,EAASE,MAAM,KAAK,GA6Q9B,KACAjB,EAAKhE,QAPDgE,EAAKmB,sBAapB/D,EACC,cAAC,GAAD,CACE/B,OAAO,wFACPC,YAAY,4LAEZ,UAGN,c,oBCjZLiG,GAgBP,CACJ,CACEC,UAAW,QACXC,MAAO,KACPC,UAAW,CACTC,KAAM,CACJrJ,MAAO,GACPC,QAAS,IAEXqJ,GAAI,CACFtJ,MAAO,GACPC,QAAS,KAGbsJ,aAAa,EACbC,UAAW,UACXrL,OAAQ,WAEV,CACE+K,UAAW,QACXC,MAAO,KACPC,UAAW,CACTC,KAAM,CACJrJ,MAAO,GACPC,QAAS,IAEXqJ,GAAI,CACFtJ,MAAO,GACPC,QAAS,KAGbsJ,aAAa,EACbC,UAAW,MACXrL,OAAQ,WAEV,CACE+K,UAAW,QACXC,MAAO,KACPC,UAAW,CACTC,KAAM,CACJrJ,MAAO,GACPC,QAAS,IAEXqJ,GAAI,CACFtJ,MAAO,GACPC,QAAS,KAGbsJ,aAAa,EACbC,UAAW,UACXrL,OAAQ,WAEV,CACE+K,UAAW,SACXC,MAAO,KACPC,UAAW,CACTC,KAAM,CACJrJ,MAAO,GACPC,QAAS,GAEXqJ,GAAI,CACFtJ,MAAO,EACPC,QAAS,KAGbsJ,aAAa,EACbC,UAAW,SACXrL,OAAQ,YCsYGsL,GAxcU,WACvB,MAGI1J,qBAAWL,GAHf,IACEI,KAAQG,EADV,EACUA,QAASD,EADnB,EACmBA,MACjByE,EAFF,EAEEA,gBAGMrK,EAAiBuG,GAAiB,SAAC/F,GAAD,OAAWA,EAAMD,QAAnDP,aAER,EAAwBiH,mBAGrB,CACDqI,aAAc,EACdpD,WAAY,IALd,mBAAOqD,EAAP,KAAaC,EAAb,KAOA,EAAkCvI,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAA8BtD,oBAAS,GAAvC,mBAAOuD,EAAP,KAAgBC,EAAhB,KACA,EAA4CxD,oBAAS,GAArD,mBAAOyD,EAAP,KAAuBC,EAAvB,KACA,EAAsC1D,oBAAS,GAA/C,mBAAO2D,EAAP,KAAoBC,EAApB,KACA,EAAgD5D,oBAAS,GAAzD,mBAAOwI,EAAP,KAAyBC,EAAzB,KACA,EAA8CzI,mBAAS4H,IAAvD,mBAAOc,EAAP,KAAwBC,EAAxB,KAEMC,EAAmB,SAACjK,EAAeC,EAAiBiK,GACxD,OAAOH,EAAgBhB,MAAK,SAACrB,GAC3B,UACGwC,GAAwB,KAAVlK,GAAgBC,GAAW,IAAOD,EAAQ,KACtC,WAAnB0H,EAAK8B,cAKJxJ,EAAQ,IAAiB,KAAVA,GAAgBC,GAAW,KACxB,YAAnByH,EAAK8B,YACJU,KAIAlK,EAAQ,IAAiB,KAAVA,GAAgBC,GAAW,KACxB,QAAnByH,EAAK8B,YACJU,KAIAlK,EAAQ,IAAiB,KAAVA,GAAgBC,GAAW,KACxB,YAAnByH,EAAK8B,YACJU,QAHH,SASJ,EAAkD7I,mBAChD4I,EAAiBjK,EAAOC,EAASwE,IADnC,mBAAO0F,EAAP,KAA0BC,EAA1B,KAIM7E,EAAa,SAACC,GAClBP,GAAe,GACfO,GAAc,IAGV6E,EAAW,uCAAG,WAClBC,EACA9E,EACAE,GAHkB,SAAAjJ,EAAA,sEAMhBsI,GAAkB,GAClB+E,GAAoB,GAPJ,SAQVpN,EAAc6N,gBAClBnQ,EACAkQ,EACU,KAAVtK,EACI,UACU,KAAVA,EACA,MACU,KAAVA,EACA,UACA,UAjBU,uBAmBVwK,KAnBU,OAoBhB9E,IACAoE,GAAoB,GACpBvE,EAAWC,GAtBK,kDAwBhBsE,GAAoB,GACpB/E,GAAkB,GAClBa,QAAQvJ,MAAR,MA1BgB,0DAAH,0DA8BXoO,GAAyB,SAC7BC,GAMA,IAAMC,EACJD,GACAA,EAAQjD,KAAI,SAACmD,GAAD,MAAU,CACpBzB,MAAOyB,EAAIvE,aACXmD,UAAWoB,EAAI7L,oBAGb8L,EAAad,EAAgBtC,KAAI,SAACC,GACtC,IAAMoD,EACJH,GAAsBA,EAAmBI,OACrCJ,EAAmB5B,MAAK,SAAC6B,GAAD,OAASA,EAAIpB,YAAc9B,EAAK8B,aACxDO,EAAgBhB,MAAK,SAAC6B,GAAD,OAASA,EAAIpB,YAAc9B,EAAK8B,aAE3D,OAAIsB,GAA6B,OAAlBA,EAAQ3B,OACrBzB,EAAKyB,MAAQ2B,EAAQ3B,MACrBzB,EAAKvJ,OAAS,UACPuJ,KAGH1H,EAAQ,IAAiB,KAAVA,GAAgBC,GAAW,KACvB,YAAnByH,EAAK8B,YACJ/E,IACDzE,EAAQ,IAAiB,KAAVA,GAAgBC,GAAW,KACvB,QAAnByH,EAAK8B,YACJ/E,IACDzE,EAAQ,IAAiB,KAAVA,GAAgBC,GAAW,KACvB,YAAnByH,EAAK8B,YACJ/E,GACgB,WAAnBiD,EAAK8B,WACJ/E,IAA+B,IAAVzE,GAAeC,GAAW,IAAOD,EAAQ,KAI/D0H,EAAKvJ,OAAS,QAFPuJ,MAQbsC,EAAmBa,IAGfhF,GAAS,uCAAG,4BAAApJ,EAAA,sEAEdkI,GAAa,GACbE,GAAW,GAHG,SAIQnI,EAAcsJ,eAAe5L,GAJrC,QAIRwC,EAJQ,OAIqDC,MACxDqJ,QAAQ6C,MAAK,SAACrB,GAAD,MAAmC,WAAzBA,EAAK3I,mBACrCwH,EAAQC,KAAK,4BAEbiE,GAAuB7N,EAAOsJ,SAC9B0D,EAAQ,CACNtD,WAAY1J,EAAO0J,WACnBoD,aAAc9M,EAAOoO,iBAEvBrG,GAAa,IAbD,gDAgBdE,GAAW,GACXF,GAAa,GAjBC,yDAAH,qDAqBT6F,GAAe,uCAAG,4BAAA/N,EAAA,+EAEEC,EAAcsJ,eAAe5L,GAF/B,QAEdwC,EAFc,OAE+CC,MACxDqJ,QAAQ6C,MAAK,SAACrB,GAAD,MAAmC,WAAzBA,EAAK3I,mBACrCwH,EAAQC,KAAK,4BAEbiE,GAAuB7N,EAAOsJ,SAC9B0D,EAAQ,CACNtD,WAAY1J,EAAO0J,WACnBoD,aAAc9M,EAAOoO,kBATL,gDAapBnG,GAAW,GAbS,yDAAH,qDAiBrB5C,qBAAU,WACR4D,OACC,IAEH5D,qBAAU,WACRwI,OACC,CAACzK,EAAOC,EAASwE,IAEpBxC,qBAAU,WACRmI,EAAqBH,EAAiBjK,EAAOC,EAASwE,MACrD,CAACsF,IAEJ9H,qBAAU,WAE2B,YAAhB,OAAjBkI,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBX,YACW,YAA7BW,EAAkBhM,QAAqD,SAA7BgM,EAAkBhM,QAE7DoI,EAAQC,KAAK,6BAEd,CAAC2D,IAEJ,IAAMc,GAAiB,WACrB,IAAIC,EAAW,EAMf,OALAnB,EAAgBoB,SAAQ,SAACzD,GACnBA,EAAKyB,OAASzB,EAAKyB,MAAQ+B,IAC7BA,EAAWxD,EAAKyB,UAGb+B,GAGHzE,GAAmBC,MAAaC,MAAM,CAC1C2D,YAAa5D,MAEVG,UAAU,sGACVC,IACCmE,KAAmB,EAAIA,KAAmB,EAC1CA,KAAmB,EAAnB,wNACgDA,KADhD,yBAEI,+GAELlE,IACC4C,EAAKrD,WAVI,+SAWoDqD,EAAKrD,WAXzD,yBAaVtC,SAAS,uGAGRoH,GAA0B,WAC9B,MACgC,aAAb,OAAjBjB,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBhM,UACjB6B,IAAUmK,EAAkBf,UAAUC,KAAKrJ,OAC3CC,GAAWkK,EAAkBf,UAAUC,KAAKpJ,SAC5CA,GAAWkK,EAAkBf,UAAUE,GAAGrJ,SACT,WAAhCkK,EAAkBX,YACf/E,IAAoBzE,EAAQ,GAAgB,IAAVA,GAAeC,GAAW,KAC5DD,GAAS,MAgBnB,OACE,qBACEK,UAAWC,IACTC,KAAM,OACNqE,GAAWF,EAAYnE,KAAM,aAAmB,MAHpD,SAKGmE,EACC,cAAC,GAAD,CAAgBrE,UAAWE,KAAM,eAAoBsB,gBAAc,IACjE+C,EACF,sBAAKvE,UAAWE,KAAM,cAAtB,UACE,sBAAMF,UAAWE,KAAO,cAAxB,kSAGA,cAAC,EAAD,CACEzF,KAAK,SACLiG,UAAU,EACVV,UAAWE,KAAO,aAClBU,QAAS4E,GAJX,oIASF,qCACE,qBAAKxF,UAAWE,KAAM,gBAAtB,SACE,wBAAOF,UAAWE,KAAO,iBAAzB,UACE,0BAASF,UAAWE,KAAO,yBAA3B,8DACYoJ,EAAKD,gBAEjB,gCACE,+BACE,gEACA,oFAGJ,gCACGK,EACEsB,QAAO,SAAC3D,GAAD,MAA6B,WAAnBA,EAAK8B,aACtB/B,KAAI,SAACC,GACJ,OACE,+BACE,6BAAKA,EAAKwB,YACV,oBACE7I,UACkB,SAAhBqH,EAAKvJ,OACDoC,KAAO,iBACS,YAAhBmH,EAAKvJ,OACLoC,KAAO,wBACPxC,EANR,SAQmB,YAAhB2J,EAAKvJ,OACF,kFACgB,SAAhBuJ,EAAKvJ,OACL,8FACAuJ,EAAKyB,UAdJzB,EAAK8B,qBAsB1B,qBAAKnJ,UAAWE,KAAO,6BAAvB,SACE,qBAAKF,UAAWE,KAAM,QAAtB,SACE,cAAC,IAAD,CACEiH,cAAe,CAAE8C,YAAa,GAC9B7D,iBAAkBA,GAClBuB,SAAU,WACR/C,GAAe,IAJnB,SAMG,gBACC2C,EADD,EACCA,OACAK,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACA1F,EAPD,EAOCA,aACA2F,EARD,EAQCA,QACA9C,EATD,EASCA,cACAE,EAVD,EAUCA,UAVD,OAYC,uBAAMsC,SAAUK,EAAchI,UAAWE,KAAO,eAAhD,UACE,cAAC,GAAD,CACEwC,OAAO,wFACPC,YAAY,wMACZ3C,UAAWC,IAAWC,KAAO,8BAE/B,oBAAGF,UAAWE,KAAO,4BAArB,uDACU,IACP4J,GAAqD,WAAhCA,EAAkBX,UACpC,iCACA,KAAM,IACV,sBAAMnJ,UAAW,YAAjB,0EALF,sLAOG8J,GAAqD,WAAhCA,EAAkBX,UACtC,qCACG,IADH,SAEI,IACF,sBAAMnJ,UAAW,YAAjB,SACG8J,EAAkBjB,eAGrB,QAEN,oBAAG7I,UAAWE,KAAO,0BAA2B+K,MAAO,CAAEC,OAAQ,GAAjE,sHAnHqB,YAAhB,OAAjBpB,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBX,WACjBxJ,GAAS,IAAMA,EAAQ,GAClB,UAEA,oBAGH,UAAN,cAAYmK,QAAZ,IAAYA,OAAZ,EAAYA,EAAmBf,UAAUC,KAAKrJ,MAA9C,mBAAuDmK,QAAvD,IAAuDA,OAAvD,EAAuDA,EAAmBf,UAAUC,KAAKpJ,QAAzF,gCAAuGkK,QAAvG,IAAuGA,OAAvG,EAAuGA,EAAmBf,UAAUE,GAAGtJ,MAAvI,mBAAgJmK,QAAhJ,IAAgJA,OAAhJ,EAAgJA,EAAmBf,UAAUE,GAAGrJ,YA+GlK,cAAC,GAAD,CACEsD,UAAU,2BACVD,GAAG,cACHS,KAAK,cACLjJ,KAAK,SACL4I,MAAOkE,EAAO0C,YACd3G,SAAUwE,EACVvE,OAAQwE,EACR/D,aAAc4D,EAAOqC,aAAe,GACpCtG,UAAU,EACVH,aAAcqE,EAAQoC,cAAerC,EAAOqC,aAC5ClH,WAAS,EACTgB,iBAAe,EACfrD,UAAWqK,OAEZA,KACC,mBACE/K,UAAWC,IACTC,KAAO,2BAC2B,YAAhB,OAAjB4J,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBX,YACR,IAAVxJ,GACAC,GAAW,IACsB,YAAhB,OAAjBkK,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBX,aACjB,GAAKvJ,GAAW,EACdM,KAAO,gCAET,MAVR,SAYqC,YAAhB,OAAjB4J,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBX,YACT,IAAVxJ,GACAC,GAAW,IACoB,YAAhB,OAAjBkK,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBX,WACjB,GAAKvJ,IAAY,EACf,sBAAMI,UAAWE,KAAO,cAAxB,qLAIA,2IACsB,IACpB,sBAAMF,UAAWE,KAAO,cAAxB,SAAwC,GAAKN,IAAgB,IAF/D,oCAMA,OAGN,mBAAGI,UAAWE,KAAO,4BAGvB,cAAC,EAAD,CACEzF,KAAK,SACLiG,UAAWuH,GAAW3F,IAAiByI,KAFzC,oEAKCpG,EACC,cAAC,GAAD,CACErC,aAAckH,EACdpH,QAAS,kBAAM8C,EAAWC,IAC1B9C,MACE,oBAAGrC,UAAWE,KAAO,eAArB,uNACwC,IACrC4J,GAC+B,WAAhCA,EAAkBX,UAChB,qCACG,IADH,SAEI,IACF,sBAAMnJ,UAAW,YAAjB,SACG8J,EAAkBjB,eAGrB,KAAM,IACV,uBACA,sBAAM7I,UAAWE,KAAO,6BAAxB,SACGqH,EAAO0C,cACF,IAfV,gDAmBF9H,UAAW,kBACT6H,EAAYzC,EAAO0C,YAAa9E,EAAeE,IAxBnD,SA0BGZ,EACC,cAAC,GAAD,CACE/B,OAAO,wFACPC,YAAY,4LAEZ,OAEJ,qB,qBC9YTwI,GAnDM,WACnB,IAAQpR,EAAiBuG,GAAiB,SAAC/F,GAAD,OAAWA,EAAMD,QAAnDP,aACR,EAA4CiH,mBAAyB,MAArE,mBAAOD,EAAP,KAAuBmD,EAAvB,KACA,EAAkClD,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KAEM8G,EAAa,uCAAG,sBAAAhP,EAAA,6DACpBkI,GAAa,GADO,SAEEjI,EAAcgP,oBAAoBtR,GAFpC,cAEoDyC,KAC7D8O,gBACTpH,GAAkB,GAClBgC,EAAQC,KAAK,yBAEbD,EAAQC,KAAK,0BAEf7B,GAAa,GATO,2CAAH,qDA0BnB,OAVA1C,qBAAU,WACRwJ,MACC,IAEHxJ,qBAAU,WACe,OAAnBb,GACFmF,EAAQC,KAAK,0BAEd,CAACpF,IAGF,qBAAKf,UAAWE,KAAO,iBAAvB,SACGmE,EAAY,KACX,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkH,KAAK,yBAAyBC,UAAWpC,KAChD,cAAC,IAAD,CAAOmC,KAAK,0BAAZ,SACE,cAAC,GAAD,CAAerH,kBAtBA,SAAC3H,GAC1B2H,EAAkB3H,QAuBV,cAAC,IAAD,CAAOgP,KAAK,uBAAZ,SACE,cAAC,EAAD,CAAaxK,eAAgBA,eCpD9B0K,GAAiB,eACzBhQ,GCEQiQ,GAAa,WACxB,IAAMvP,EAAWwP,cACjB,OAAOC,6BAAmBH,GAAmBtP,ICPhC,OAA0B,sCCA1B,OAA0B,4C,oBCsG1B0P,GAtFG,WAChB,IAAQnP,EAAegP,KAAfhP,WACR,EAAwC4D,GAAiB,SAAC/F,GAAD,OAAWA,EAAMD,QAAlEH,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,gBACdmM,EAAmBC,MAAaC,MAAM,CAC1C3J,MAAO0J,MAEJG,UAAU,4GACVsF,OACAnI,SAAS,qGACZ/G,SAAUyJ,MAAaG,UAAU,4GAAuB7C,SAAS,uGAEnE,OACE,sBAAK3D,UAAWE,KAAO,cAAvB,UACE,cAAC,EAAD,CAAQF,UAAWE,KAAO,wBAC1B,qBAAKF,UAAWE,KAAO,uBAAvB,SACE,qBAAKC,IAAK4L,GAAS1L,IAAI,0IAEzB,qBAAKL,UAAWE,KAAO,iCAAvB,SACE,qBAAKF,UAAWE,KAAM,QAAtB,SACE,cAAC,IAAD,CACEiH,cAAe,CAAExK,MAAO,GAAIC,SAAU,IACtCwJ,iBAAkBA,EAClBuB,SAAU,SAACJ,GACT7K,EAAW6K,EAAO5K,MAAO4K,EAAO3K,WAJpC,SAMG,gBACC2K,EADD,EACCA,OACAK,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,QAPD,OASC,uBAAMN,SAAUK,EAAchI,UAAWE,KAAO,cAAhD,UACE,cAAC,GAAD,CACEwC,OAAO,0IACPC,YAAY,+IACZ3C,UAAWC,IACTC,KAAO,0BACP/F,EAAa+F,KAAO,kCAAoC,QAG5D,mBAAGF,UAAWE,KAAO,2BAArB,mIAIA,cAAC,GAAD,CACEgD,UAAU,iCACVD,GAAG,QACHS,KAAK,QACLjJ,KAAK,OACL4I,MAAOkE,EAAO5K,MACd2G,SAAUwE,EACVvE,OAAQwE,EACR/D,aAAc4D,EAAOjL,OAAS,GAC9BgH,UAAU,EACVH,aAAcqE,EAAQlL,QAASiL,EAAOjL,SAGxC,cAAC,GAAD,CACEuG,UAAU,uCACVD,GAAG,WACHS,KAAK,WACLjJ,KAAK,WACL4I,MAAOkE,EAAO3K,SACd0G,SAAUwE,EACVvE,OAAQwE,EACR/D,aAAc4D,EAAOhL,UAAY,GACjC+G,UAAU,EACVH,aAAcqE,EAAQjL,WAAYgL,EAAOhL,UACzC6G,SAAO,EACPG,QAASoI,KAEX,cAAC,EAAD,CAAYvR,KAAK,SAASiG,SAAUzG,IAAoBgO,EAAxD,SACGhO,EAAkB,cAAC,GAAD,IAAqB,iDC3F3C,OAA0B,iC,oBC+B1BgS,GArBuB,SAACzJ,GACrC,MAAuDA,EAAM6F,UAArDA,EAAR,EAAQA,UAAW6D,EAAnB,EAAmBA,WAAY1D,EAA/B,EAA+BA,aAAc2D,EAA7C,EAA6CA,MAC7C,OACE,sBAAKnM,UAAWE,KAAO,cAAvB,UACE,qBACEC,IAAKgM,EAAQ,UAAYA,EAAQC,GACjC/L,IAAG,UAAKmI,EAAL,YAAqBH,GACxBrI,UAAWE,KAAO,qBAEpB,oBAAIF,UAAWE,KAAO,uBAAtB,SAA+CmI,EAAUC,MAAM,KAAK,KACpE,oBAAGtI,UAAWE,KAAO,oBAArB,UACG,IACAmI,EAAUC,MAAM,KAAK+D,OAAO,GAAGC,KAAK,QAEvC,mBAAGtM,UAAWE,KAAO,0BAArB,SACkB,yFAAfgM,EAAkCA,EAAlC,cAAmDA,EAAnD,c,oBCMMK,GAnByB,SAAC,GAA+B,IAA7BvM,EAA4B,EAA5BA,UAAWnB,EAAiB,EAAjBA,WACpD,OACE,qBACEmB,UAAWC,IACTC,KAAO,cACe,IAAtBrB,EAAW6L,OAAexK,KAAO,oBAAsB,KACvDF,GAAwB,MAJ5B,SAMyB,IAAtBnB,EAAW6L,OACV,qBAAK1K,UAAWE,KAAO,qBAAvB,SACE,sBAAMF,UAAWE,KAAO,cAAxB,0IAGFrB,EAAWuI,KAAI,SAACC,GAAD,OAAU,cAAC,GAAD,CAAmCgB,UAAWhB,GAA9BA,EAAKmB,oB,oBCfhDgE,GAAqB1M,gBAAK,WAC9B,MAAkCkB,mBAAS,CACzCyL,cAAe,EACfC,YAAa,IAFf,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,EAAoC5L,mBAAuB,IAA3D,mBAAOnC,EAAP,KAAmBsF,EAAnB,KACA,EAAkCnD,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAA8BtD,oBAAS,GAAvC,mBAAOuD,EAAP,KAAgBC,EAAhB,KACMqI,EAAe,SAACxJ,GACpB,OAAQ,GAAKA,GACViF,MAAM,IACNwE,UACAhH,QAAO,SAACjC,EAAMkC,EAASoC,GACtB,OAAOA,EAAQ,IAAM,GAAe,IAAVA,EACjBtE,EAAO,IAAMkC,EAClB,GAAKlC,EAAOkC,KAEjBuC,MAAM,IACNwE,UACAR,KAAK,KAEJ9G,EAAS,uCAAG,sBAAApJ,EAAA,sDAChB,IACEkI,GAAa,GACbE,GAAW,GACX3H,WAAU,sBAAC,4BAAAT,EAAA,sEACaC,EAAc0Q,4BAD3B,OACHxQ,EADG,OACwDC,KACjEoQ,EAAa,CACXH,cAAelQ,EAAOyQ,aACtBN,YAAanQ,EAAO0Q,eAEtB9I,EAAc5H,EAAO+M,MACrBhF,GAAa,GAPJ,2CAQR,KACH,MAAOtI,GACPwI,GAAW,GACXF,GAAa,GAfC,2CAAH,qDAsBf,OAJA1C,qBAAU,WACR4D,MACC,IAGD,qBACExF,UAAWC,IACTC,KAAM,WACNqE,GAAWF,EAAYnE,KAAM,iBAAuB,MAHxD,SAKGmE,EACC,cAAC,GAAD,CAAgBrE,UAAWE,KAAM,mBAAwBsB,gBAAc,IACrE+C,EACF,sBAAKvE,UAAWE,KAAM,kBAAtB,UACE,sBAAMF,UAAWE,KAAO,cAAxB,yGACA,cAAC,EAAD,CACEzF,KAAK,SACLiG,UAAU,EACVV,UAAWE,KAAO,aAClBU,QAAS4E,EAJX,yHASF,qCACE,sBACExF,UAAWC,IACTC,KAAO,4BACPA,KAAO,iBAHX,UAKE,sBAAKF,UAAWE,KAAO,4BAAvB,UACE,sBAAMF,UAAWE,KAAO,sBAAxB,yGACA,qBAAKF,UAAWE,KAAO,uBAAvB,SACG2M,EAAaF,EAAUF,oBAG5B,sBAAKzM,UAAWE,KAAO,4BAAvB,UACE,sBAAMF,UAAWE,KAAO,sBAAxB,qJAGA,qBAAKF,UAAWE,KAAO,uBAAvB,SACG2M,EAAaF,EAAUD,qBAI9B,cAAC,GAAD,CACE1M,UAAWE,KAAO,+BAClBrB,WAAYA,YAQT2N,MCtGf,SAASU,KACP,MAAmDC,OACnD,MAAO,CACLC,MAFF,EAAQC,WAGNC,OAHF,EAA2BC,aAOd,SAASC,KACtB,MAAgDxM,mBAASkM,MAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KAWA,OATA9L,qBAAU,WACR,SAAS+L,IACPD,EAAoBR,MAItB,OADAC,OAAOS,iBAAiB,SAAUD,GAC3B,kBAAMR,OAAOU,oBAAoB,SAAUF,MACjD,IAEIF,E,wBC6BMK,GAxCyBhO,gBAAK,SAAoB0C,GAC/D,MAA0BxB,mBAAc,MAAxC,mBAAOiK,EAAP,KAAc8C,EAAd,KACA,EAGIvL,EAFFjG,OAAU8L,EADZ,EACYA,UAAW9L,EADvB,EACuBA,OAAQ4P,EAD/B,EAC+BA,MAC7B6B,EACExL,EADFwL,eAeF,OAbApM,qBAAU,WACR/E,YAAW,WAEPkR,EADEC,EACO,CACPZ,MAAM,eAAD,OAA0B,IAAT7Q,EAAjB,OAGE,CACP+Q,OAAO,gBAAD,OAA2B,IAAT/Q,EAAlB,UAGT,OACF,CAACA,EAAQyR,IAEV,sBAAKhO,UAAWE,KAAO,eAAvB,UACE,uBAAMF,UAAWE,KAAO,wBAAxB,UAAkD3D,EAAlD,OACA,qBAAKyD,UAAWE,KAAO,sBAAuB+K,MAAOA,IACrD,sBAAKjL,UAAWE,KAAO,0BAAvB,UACE,qBACEC,IAAKgM,EAAQ,UAAYA,EAAQC,GACjC/L,IAAG,mCAAUgI,GACbrI,UAAWE,KAAO,wBAEpB,qBAAIF,UAAWE,KAAO,qBAAtB,UACE,+BAAOmI,EAAUC,MAAM,KAAK,KAC5B,sBAAMtI,UAAWE,KAAO,+BAAxB,SACGmI,EAAUC,MAAM,KAAK,iB,qBCMnB2F,GArC0B,SAAC,GAA+B,IAA7BjO,EAA4B,EAA5BA,UAAWnB,EAAiB,EAAjBA,WACrD,EAA0CmC,mBACxCI,SAAS8M,gBAAgBC,aAAe,MAD1C,mBAAOH,EAAP,KAAuBI,EAAvB,KAGQhB,EAAUI,KAAVJ,MAUR,OARAxL,qBAAU,WACJwL,GAAS,OAASY,EACpBI,GAAgB,GACPhB,EAAQ,MAAQY,GACzBI,GAAgB,KAEjB,CAAChB,IAGF,qBAAKpN,UAAWC,IAAWC,KAAO,gBAAiBF,GAAwB,MAA3E,SACGnB,EACEwP,MAAK,SAACjS,EAAGkS,GACR,OAAIlS,EAAEG,OAAS+R,EAAE/R,QACP,EAENH,EAAEG,OAAS+R,EAAE/R,OACR,EAEF,KAER6K,KAAI,SAACC,GAAD,OACH,cAAC,GAAD,CAEE9K,OAAQ8K,EACR2G,eAAgBA,GAFX3G,EAAKmB,oBCnBP+F,ICTHC,GDSGD,GAnBf,SAAqBE,EAAsBC,GACzC,IAAMC,EAAcC,iBAAO,MACrBC,EAAgBD,iBAAOH,GAc7B,OAZA7M,qBAAU,WACRiN,EAAc9I,QAAU0I,IACvB,CAACA,IAEJ7M,qBAAU,WAER,GAAqB,kBAAV8M,EAET,OADAC,EAAY5I,QAAUoH,OAAO2B,aAFlB,kBAAMD,EAAc9I,YAEgB2I,GACxC,kBAAMvB,OAAO4B,cAAcJ,EAAY5I,YAE/C,CAAC2I,IAEGC,G,oBEsFMK,GA9FK,WAClB,MAAkChO,mBAAS,CACzCvC,QAAS,EACTwQ,kBAAmB,IAFrB,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,EAAoCnO,mBAMlC,IANF,mBAAOnC,EAAP,KAAmBsF,EAAnB,KAOA,EAAkCnD,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAA8BtD,oBAAS,GAAvC,mBAAOuD,EAAP,KAAgBC,EAAhB,KAEMgB,EAAS,uCAAG,sBAAApJ,EAAA,sDAChB,IACEkI,GAAa,GACbE,GAAW,GACX3H,WAAU,sBAAC,4BAAAT,EAAA,sEACaC,EAAc+S,iBAD3B,OACH7S,EADG,OAC6CC,KACtD2S,EAAa,CACX1Q,QAASlC,EAAOkC,QAChBwQ,kBAAmB1S,EAAO8S,+BAE5BlL,EAAc5H,EAAO+S,mBACrBhL,GAAa,GAPJ,2CAQR,KACH,MAAOtI,GACPwI,GAAW,GACXF,GAAa,GAfC,2CAAH,qDAmBTiL,EAAe,uCAAG,4BAAAnT,EAAA,+EAEEC,EAAc+S,iBAFhB,OAEd7S,EAFc,OAEkCC,KACtD2S,EAAa,CACX1Q,QAASlC,EAAOkC,QAChBwQ,kBAAmB1S,EAAO8S,+BAE5BlL,EAAc5H,EAAO+S,mBAPD,gDASpB/J,QAAQiK,IAAR,MAToB,yDAAH,qDAqBrB,OARA5N,qBAAU,WACR4D,MACC,IAEH+I,IAAY,WACVgB,MACC,MAGD,qBACEvP,UAAWC,IACTC,KAAM,QACNqE,GAAWF,EAAYnE,KAAM,cAAoB,MAHrD,SAKGmE,EACC,cAAC,GAAD,CAAgBrE,UAAWE,KAAM,gBAAqBsB,gBAAc,IAClE+C,EACF,sBAAKvE,UAAWE,KAAM,eAAtB,UACE,sBAAMF,UAAWE,KAAO,cAAxB,yGACA,cAAC,EAAD,CACEzF,KAAK,SACLiG,UAAU,EACVV,UAAWE,KAAO,aAClBU,QAAS4E,EAJX,yHASF,qCACE,sBAAKxF,UAAWE,KAAM,oBAAtB,UACE,oBAAGF,UAAWE,KAAM,KAApB,wCACS,uBAAMF,UAAWE,KAAM,aAAvB,UAA0CgP,EAAUzQ,QAApD,UAET,oBAAGuB,UAAWE,KAAM,KAApB,sHACuB,IACrB,uBAAMF,UAAWE,KAAM,aAAvB,UACGgP,EAAUD,kBADb,aAKJ,cAAC,GAAD,CAAajP,UAAWE,KAAM,cAAmBrB,WAAYA,U,wCC7DxD4Q,GAxB2B3P,gBAAK,SAAqB0C,GAClE,MAA0BxB,mBAAc,MAAxC,mBAAOiK,EAAP,KAAc8C,EAAd,KACA,EAGIvL,EAFFkN,YAAejR,EADjB,EACiBA,QAASkR,EAD1B,EAC0BA,SACxB3B,EACExL,EADFwL,eAWF,OARApM,qBAAU,WACR/E,YAAW,WACTkR,EAAS,CACPX,MAAM,SAAD,OAAWY,EAAiB,GAAK,GAAjC,eAAoD,IAAVvP,EAA1C,UAEN,OACF,CAACA,EAASuP,IAGX,sBAAKhO,UAAWE,KAAO,gBAAvB,UACE,oBAAIF,UAAWE,KAAO,0BAAtB,SAAkDyP,IAClD,qBAAK3P,UAAWE,KAAO,uBAAwB+K,MAAOA,IACtD,uBAAMjL,UAAWE,KAAO,yBAAxB,UAAmD0P,KAAKC,MAAMpR,GAA9D,aC+ESqR,GA/F2B,SAAC,GAAmB,IAAjB9P,EAAgB,EAAhBA,UAC3C,EAAkCgB,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAA8BtD,oBAAS,GAAvC,mBAAOuD,EAAP,KAAgBC,EAAhB,KACA,EAA8BxD,mBAK5B,IALF,mBAAOvC,EAAP,KAAgBsR,EAAhB,KAMA,EAA0C/O,mBACxCI,SAAS8M,gBAAgBC,aAAe,KAD1C,mBAAOH,EAAP,KAAuBI,EAAvB,KAGQhB,EAAUI,KAAVJ,MACR,EAEI1N,qBAAWL,GADbI,KAAQG,EADV,EACUA,QAASD,EADnB,EACmBA,MAGbqQ,EAAY,uCAAG,sBAAA5T,EAAA,sDACnB,IACEkI,GAAa,GACbE,GAAW,GACX3H,WAAU,sBAAC,4BAAAT,EAAA,sEACaC,EAAc4T,sBAD3B,OACH1T,EADG,OACkDC,KAC3DuT,EAAWxT,EAAO2T,mBAClB5L,GAAa,GAHJ,2CAIR,KACH,MAAOtI,GACPwI,GAAW,GACXF,GAAa,GAXI,2CAAH,qDAeZ6L,EAAkB,uCAAG,4BAAA/T,EAAA,+EAEDC,EAAc4T,sBAFb,OAEjB1T,EAFiB,OAEoCC,KAC3DuT,EAAWxT,EAAO2T,mBAHK,gDAKvB3K,QAAQvJ,MAAR,MALuB,yDAAH,qDA0BxB,OAjBA4F,qBAAU,WACRoO,MACC,IAEHpO,qBAAU,YACO,KAAVjC,GAA4B,IAAZC,GAA6B,KAAVD,GAA4B,IAAZC,IACtDuQ,MAED,CAACvQ,EAASD,IAEbiC,qBAAU,WACJwL,GAAS,MAAQY,EACnBI,GAAgB,GACPhB,EAAQ,KAAOY,GACxBI,GAAgB,KAEjB,CAAChB,IAEF,qBACEpN,UAAWC,IACTC,KAAO,gBACPqE,GAAWF,GAAgC,IAAnB5F,EAAQiM,OAC5BxK,KAAO,sBACP,KACJF,GAAwB,MAN5B,SAQGqE,EACC,cAAC,GAAD,CAAgBrE,UAAWE,KAAO,wBAAyBsB,gBAAc,IACvE+C,GAA8B,IAAnB9F,EAAQiM,OACrB,qBAAK1K,UAAWE,KAAO,uBAAvB,SACsB,IAAnBzB,EAAQiM,OACP,sBAAM1K,UAAWE,KAAO,cAAxB,uFAEA,qCACE,sBAAMF,UAAWE,KAAO,cAAxB,yGACA,cAAC,EAAD,CACEzF,KAAK,SACLiG,UAAU,EACVV,UAAWE,KAAO,aAClBU,QAASoP,EAJX,2HAWNvR,EAAQ2I,KAAI,SAACC,EAAMc,GAAP,OACV,cAAC,GAAD,CAAyBuH,YAAarI,EAAM2G,eAAgBA,GAA1C7F,S,oBC5EbiI,GArBK,WAClB,IACUzQ,EACND,qBAAWL,GADbI,KAAQE,MASV,OACE,sBAAKK,UAAWE,KAAM,QAAtB,UACE,qBAAIF,UAAWE,KAAM,gBAArB,sDACe,uBAAMF,UAAWE,KAAM,MAAvB,UARbP,GAAS,IAAMA,EAAQ,GAAW,KAClCA,GAAS,IAAMA,EAAQ,GAAW,KAClCA,GAAS,IAAMA,EAAQ,GAAW,UAAtC,EAMiB,YAEf,cAAC,GAAD,CAAaK,UAAWE,KAAM,oB,oBC8BrBmQ,GAzCE,WACf,MAII3Q,qBAAWL,GAJf,IACEI,KAAQG,EADV,EACUA,QAASD,EADnB,EACmBA,MACjByE,EAFF,EAEEA,gBACAkM,EAHF,EAGEA,WAyBF,OAtBA1O,qBAAU,WACJwC,GAAmBkM,EAAWC,UAAW,IAAIC,MAAOD,SACtDrK,EAAQC,KAAK,kBAETxG,EAAQ,IAAoC,0BAA9BuG,EAAQ7E,SAASoP,UACjCvK,EAAQC,KAAK,0BAGF,KAAVxG,GAA4B,IAAZC,GAChBD,GAAS,IAAMA,EAAQ,IAAoC,kBAA9BuG,EAAQ7E,SAASoP,WAE/CvK,EAAQC,KAAK,kBAGF,KAAVxG,GAA4B,IAAZC,GAChBD,GAAS,IAAoC,kBAA9BuG,EAAQ7E,SAASoP,WAEjCvK,EAAQC,KAAK,oBAGhB,CAACvG,EAASD,EAAOyE,IAGlB,sBAAKpE,UAAWE,KAAM,KAAtB,UACE,cAAC,EAAD,CAAQF,UAAWE,KAAM,eACzB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqL,KAAK,wBAAwBC,UAAWgB,KAC/C,cAAC,IAAD,CAAOjB,KAAK,gBAAgBC,UAAW4E,KACvC,cAAC,IAAD,CAAO7E,KAAK,gBAAgBC,UAAWwD,a,SLlCnCR,K,cAAAA,E,0BAAAA,E,oBAAAA,E,gCAAAA,Q,KAOL,IAAMkC,GAAyB,CACpC,CACEnF,KAAMiD,GAAWmC,UACjBC,OAAO,EACPpF,UAAW6E,IAEb,CACE9E,KAAMiD,GAAWqC,kBACjBrF,UAAW6E,IAEb,CACE9E,KAAMiD,GAAWsC,WACjBtF,UAAWK,KAIFkF,GAA0B,CACrC,CACExF,KAAMiD,GAAWwC,cACjBxF,UAAWL,K,oBMrBA8F,GAXM,WACnB,OACE,sBAAKjR,UAAWE,KAAM,UAAtB,UACE,6JACA,cAAC,IAAD,CAASF,UAAWE,KAAM,OAAY+I,GAAIuF,GAAWmC,UAArD,yECoBSO,GAxBO,WACpB,OACE,eAAC,IAAD,WACGR,GAAatJ,KAAI,SAAC+J,GAAD,OAChB,cAAC,IAAD,CACE5F,KAAM4F,EAAM5F,KACZqF,MAAOO,EAAMP,MACbpF,UAAW2F,EAAM3F,WACZ2F,EAAM5F,SAGdwF,GAAc3J,KAAI,SAAC+J,GAAD,OACjB,cAAC,IAAD,CACE5F,KAAM4F,EAAM5F,KACZqF,MAAOO,EAAMP,MACbpF,UAAW2F,EAAM3F,WACZ2F,EAAM5F,SAGf,cAAC,IAAD,CAAOC,UAAWyF,S,oBC6FTG,GAhHU,WACvB,MAA0BpQ,mBAAS,KAAnC,mBAAOrB,EAAP,KAAc0R,EAAd,KACA,EAA8BrQ,mBAAS,KAAvC,mBAAOpB,EAAP,KAAgB0R,EAAhB,KACA,EAAkCtQ,oBAAS,GAA3C,mBAAO6I,EAAP,KAAkB0H,EAAlB,KACA,EAAoCvQ,oBAAS,GAA7C,mBAAOwQ,EAAP,KAAmBC,EAAnB,KACA,EACE/R,qBAAWL,GADLqS,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,gBAAiBlS,EAAxC,EAAwCA,KAAM2E,EAA9C,EAA8CA,gBA0B9C,OAxBAxC,qBAAU,WACR,IAAIgQ,EAAaC,aAAaC,QAAQ,gBAClCC,EAAeF,aAAaC,QAAQ,kBACpCE,EAAkBH,aAAaC,QAAQ,sBACvCG,EAAiBJ,aAAaC,QAAQ,gBACtCF,GAAcG,GAAgBC,IAChCN,EACEQ,SAASN,EAAY,IACrBM,SAASH,EAAc,MACrBE,EACFC,SAASF,EAAiB,KAE5BP,GAAc,MAEf,IAEH7P,qBAAU,WACJ4P,IACFH,EAAS5R,EAAKE,MAAMwS,YACpBb,EAAW7R,EAAKG,QAAQuS,YACxBZ,EAAanN,MAEd,CAACoN,EAAY/R,EAAM2E,IAGpB,uBACEpE,UAAWC,IACTC,KAAO,YACPsR,EAAatR,KAAO,kBAAoB,MAE1CyH,SAAU,SAACyK,GACTA,EAAEC,iBACFX,EACEQ,SAASvS,EAAO,IAChBuS,SAAStS,EAAS,IAClBiK,EACA+F,KAAKC,OAAM,IAAIW,MAAO8B,UAAY,MAEpCb,GAAc,GACdI,aAAaU,QAAQ,eAAgB5S,EAAMwS,YAC3CN,aAAaU,QAAQ,iBAAkB3S,EAAQuS,YAC3CtI,GAAWgI,aAAaU,QAAQ,eAAgB,QACpDV,aAAaU,QACX,qBACA3C,KAAKC,OAAM,IAAIW,MAAO8B,UAAY,KAAMH,aAnB9C,UAsBE,wBAAOnP,QAAQ,QAAf,qCACO,IACL,uBACEvI,KAAK,SACLwI,GAAG,QACHI,MAAO1D,EACP2D,SAAU,SAAC8O,GACTf,EAASe,EAAEI,cAAcnP,QAE3BM,UAAQ,OAIZ,wBAAOX,QAAQ,UAAf,iDACS,IACP,uBACEvI,KAAK,SACLwI,GAAG,UACHI,MAAOzD,EACP0D,SAAU,SAAC8O,GAAD,OAAoCd,EAAWc,EAAEI,cAAcnP,QACzEM,UAAQ,OAIZ,wBAAOX,QAAQ,YAAf,UACE,uBACEvI,KAAK,WACLwI,GAAG,YACHS,KAAK,YACL+O,QAAS5I,EACTvG,SAAU,SAAC8O,GAAD,OACRb,EAAaa,EAAEI,cAAcC,YAPnC,qFAaA,wBAAQhY,KAAK,SAAb,8DACA,wBACEA,KAAK,SACLmG,QAAS,WACP+Q,IACAN,EAAS,KACTC,EAAW,KACXC,GAAa,GACbE,GAAc,GACdI,aAAaa,WAAW,gBACxBb,aAAaa,WAAW,kBACxBb,aAAaa,WAAW,sBACxBb,aAAaa,WAAW,iBAX5B,8DAeClB,EAAa,gNAAiD,SCtEtDmB,GA9BC,WACd,IAAQzW,EAAuBwP,KAAvBxP,mBACR,EAA6CoE,GAAiB,SAAC/F,GAAD,OAAWA,EAAMD,QAAvEP,EAAR,EAAQA,aAAcK,EAAtB,EAAsBA,mBACtB,ECXqB,WACrB,MAAwB4G,mBAAS,IAAIwP,MAArC,mBAAOoC,EAAP,KAAaC,EAAb,KACA,EAAoC7R,mBAAS,IAAIwP,MAAjD,mBAAOF,EAAP,KAAmBwC,EAAnB,KACA,EAA8B9R,wBAE5BtD,GAFF,mBAAOqV,EAAP,KAAgBC,EAAhB,KAGA,EAA8ChS,oBAAS,GAAvD,mBAAOoD,EAAP,KAAwB6O,EAAxB,KAEMC,EAAe,uCAAG,4BAAA9W,EAAA,+EAEEC,EAAc8W,gBAFhB,OAEd5W,EAFc,OAEiCC,KACrDsW,EAAc,IAAItC,KAAKjU,EAAO6W,cAHV,mIAAH,qDASrBxR,qBAAU,WACRsR,MACC,IAEH,IAAMG,EAAgB,SAACC,GACrB,IAAMC,EAAcD,GAAW,IAAI9C,KAC/BgD,EACF5D,KAAKC,MAAM0D,EAAYjB,UAAY,KAAQS,EAASU,kBAClDC,EAAc9D,KAAKC,MAAM2D,EAAgB,MACzCG,EAAgB/D,KAAKC,OAAO2D,EAA8B,KAAdE,GAAsB,IACtEb,EACE,IAAIrC,KACF+C,EAAYK,cACZL,EAAYM,WACZN,EAAYhD,SACZwC,EAASpT,MAAQ+T,EACjBX,EAASnT,QAAU+T,KA6CzB,OAxCApF,IAAY,WACV,IAAMgF,EAAc,IAAI/C,KACpBuC,GAECnD,KAAKC,MAAM0D,EAAYjB,UAAY,KAAQS,EAAQU,mBAAqB,KACvE,GACF7D,KAAKC,MAAM0D,EAAYjB,UAAY,KAAQS,EAAQU,oBAAsB,GAEzEJ,EAAcE,GAGiB,IAA7BA,EAAYO,cAAoBjB,EAAQU,KAE7C,KAEH3R,qBAAU,WACR,IAAMnC,EAAO,IAAI+Q,KACZuC,EACAM,EAAc5T,GADLoT,EAAQpT,KAErB,CAACsT,IAqBG,CACL3O,kBACAkM,aACA7Q,KAAM,CACJE,MAAOiT,EAAKmB,WACZnU,QAASgT,EAAKoB,cAEhBtC,cA1BoB,SACpB/R,EACAC,EACAiK,EACA4J,GAEAT,EAAW,CACTrT,QACAC,UACA6T,kBAAmBA,GAAqB7D,KAAKC,OAAM,IAAIW,MAAO8B,UAAY,OAE5EW,IAAqBpJ,IAgBrB8H,gBAbsB,WACtBqB,EAAW,MACXC,GAAmB,KDhEyDgB,GAAtExU,EAAR,EAAQA,KAAM2E,EAAd,EAAcA,gBAAiBkM,EAA/B,EAA+BA,WAAYoB,EAA3C,EAA2CA,cAAeC,EAA1D,EAA0DA,gBAgB1D,OAdA/P,qBAAU,WACR1F,MACC,IAEH0F,qBAAU,WACJxH,IACE8L,EAAQ7E,SAASoP,WAAajC,GAAWsC,YACvC/W,GAAcmM,EAAQC,KAAKqI,GAAWwC,eAExC9K,EAAQ7E,SAASoP,SAASyD,SAAS1F,GAAWwC,iBAC3CjX,GAAcmM,EAAQC,KAAKqI,GAAWsC,gBAG9C,CAAC/W,EAAcmM,EAAQ7E,SAASoP,SAAUrW,IAE3C,cAAC,EAAY+Z,SAAb,CACE9Q,MAAO,CAAE5D,OAAM6Q,aAAYlM,kBAAiBsN,gBAAeC,mBAD7D,SAEE,sBAAK3R,UAAU,UAAf,UACE,cAAC,GAAD,IACE5F,EAA6C,cAAC,GAAD,IAAxB,0FE1B/B4H,IAASkG,OACP,cAAC,IAAD,CAAU9M,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAQ8K,QAASA,EAAjB,SACE,cAAC,IAAMkO,WAAP,UACE,cAAC,GAAD,UAINhT,SAASiT,eAAe,U,mBClB1B1a,EAAOC,QAAU,CAAC,aAAa,2BAA2B,qBAAqB,mCAAmC,sBAAsB,oCAAoC,gCAAgC,8CAA8C,QAAU,wBAAwB,aAAa,2BAA2B,0BAA0B,wCAAwC,yBAAyB,uCAAuC,iCAAiC,iD,mBCAveD,EAAOC,QAAU,CAAC,cAAc,4BAA4B,uBAAuB,qCAAqC,qBAAqB,mCAAmC,yBAAyB,uCAAuC,qBAAqB,mCAAmC,oBAAoB,kCAAkC,8BAA8B,8C,mBCA5XD,EAAOC,QAAU,CAAC,eAAe,6BAA6B,qBAAqB,mCAAmC,sBAAsB,oCAAoC,aAAa,2BAA2B,YAAY,4B,mBCApOD,EAAOC,QAAU,CAAC,kBAAoB,kCAAkC,eAAiB,+BAA+B,aAAe,6BAA6B,uBAAuB,qCAAqC,cAAgB,gC,mBCAhPD,EAAOC,QAAU,CAAC,cAAc,4BAA4B,oBAAoB,kCAAkC,uBAAuB,qCAAqC,sBAAsB,oCAAoC,2BAA2B,2C,mBCAnQD,EAAOC,QAAU,CAAC,aAAa,2BAA2B,kBAAkB,gCAAgC,sBAAsB,oCAAoC,mBAAmB,iCAAiC,yBAAyB,yC,mBCAnPD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,aAAe,6BAA6B,qBAAuB,uC,mBCAnKD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,eAAiB,+BAA+B,cAAgB,8BAA8B,cAAgB,gC,mBCAlKD,EAAOC,QAAU,CAAC,aAAa,2BAA2B,mBAAmB,iCAAiC,oBAAoB,kCAAkC,aAAa,2BAA2B,YAAY,4B,mBCAxND,EAAOC,QAAU,CAAC,eAAe,6BAA6B,yBAAyB,uCAAuC,sBAAsB,oCAAoC,wBAAwB,wC,mBCAhND,EAAOC,QAAU,CAAC,QAAU,wBAAwB,gBAAkB,gCAAgC,MAAQ,sBAAsB,cAAgB,gC,kBCApJD,EAAOC,QAAU,CAAC,SAAW,yBAAyB,eAAiB,+BAA+B,gBAAkB,gCAAgC,aAAa,2BAA2B,YAAY,0BAA0B,eAAiB,+BAA+B,gBAAgB,8BAA8B,yBAAyB,uCAAuC,2BAA2B,yCAAyC,iBAAmB,iCAAiC,yBAAyB,uCAAuC,uBAAuB,qCAAqC,wBAAwB,sCAAsC,qBAAqB,mCAAmC,2BAA2B,yCAAyC,aAAe,6BAA6B,aAAe,6BAA6B,6BAA6B,2CAA2C,4BAA4B,0CAA0C,mCAAmC,iDAAiD,2BAA2B,yCAAyC,kCAAkC,gDAAgD,4BAA4B,0CAA0C,yBAAyB,yC,mBCAj2CD,EAAOC,QAAU,CAAC,cAAc,4BAA4B,wBAAwB,sCAAsC,yBAAyB,yC,mBCAnJD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,wBAAwB,sCAAsC,KAAO,uB,mBCAzHD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,aAAe,+B,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,WAAW,yBAAyB,iBAAiB,kC","file":"static/js/main.94c05ace.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"voters\":\"styles_voters__3Jknw\",\"voters_empty\":\"styles_voters_empty__2lt94\",\"voters__error\":\"styles_voters__error__3tuGZ\",\"error-text\":\"styles_error-text__37e3l\",\"error-btn\":\"styles_error-btn__7LJrp\",\"voters__results\":\"styles_voters__results__2Tl8T\",\"resluts-table\":\"styles_resluts-table__1S1ax\",\"turnout-error\":\"styles_turnout-error__PvKYE\",\"turnout-success\":\"styles_turnout-success__9x_cW\",\"resluts-table__header\":\"styles_resluts-table__header__3WZv-\",\"voters__content-container\":\"styles_voters__content-container__2e0FJ\",\"content\":\"styles_content__2CPue\",\"voters-form\":\"styles_voters-form__iTBdL\",\"voters-form__description\":\"styles_voters-form__description__3NLAv\",\"voters-form__time-left\":\"styles_voters-form__time-left__LkVLu\",\"voters-form__time-left_alert\":\"styles_voters-form__time-left_alert__1vW3E\",\"voters-form__main-error\":\"styles_voters-form__main-error__294MO\",\"voters-form__main-error_showing\":\"styles_voters-form__main-error_showing__71w56\",\"popup-title\":\"styles_popup-title__2FJE4\",\"popup-title__people-count\":\"styles_popup-title__people-count__VZJ_a\",\"first-voters-form__description\":\"styles_first-voters-form__description__1PS1J\",\"first-voters-form__time-left\":\"styles_first-voters-form__time-left__1Saql\",\"first-voters-form__main-error\":\"styles_first-voters-form__main-error__XfA_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employee-page\":\"styles_employee-page__2S5I5\",\"employee-page__header\":\"styles_employee-page__header__XpJJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results-list\":\"styles_results-list__2ZV57\",\"results-list_empty\":\"styles_results-list_empty__3Pi1W\",\"results-list__error\":\"styles_results-list__error__3ptIR\",\"error-text\":\"styles_error-text__FoSbX\",\"error-btn\":\"styles_error-btn__3_Z0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"candidates\":\"styles_candidates__3XXL0\",\"candidates__voting-areas\":\"styles_candidates__voting-areas__3wQXi\",\"voting-areas__info-block\":\"styles_voting-areas__info-block__2_JbY\",\"voting-areas__name\":\"styles_voting-areas__name__1U2SG\",\"voting-areas__value\":\"styles_voting-areas__value__1PcBy\",\"candidates__candidates-list\":\"styles_candidates__candidates-list__3ctqF\",\"candidates_empty\":\"styles_candidates_empty__qST_j\",\"candidates__error\":\"styles_candidates__error___SnR6\",\"error-text\":\"styles_error-text__2dX8_\",\"error-btn\":\"styles_error-btn__q0EXl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"styles_results__1QdWF\",\"results__statistics\":\"styles_results__statistics__X-BY2\",\"info\":\"styles_info__1Q3Kd\",\"info__result\":\"styles_info__result__1nj5z\",\"results__list\":\"styles_results__list__ZR3Jq\",\"results_empty\":\"styles_results_empty__23ihD\",\"results__error\":\"styles_results__error__3i6sp\",\"error-text\":\"styles_error-text__38QPZ\",\"error-btn\":\"styles_error-btn__13iEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-input\":\"styles_form-input__1t8R0\",\"form-input__label\":\"styles_form-input__label__3HEZ7\",\"form-input__input-wrapper\":\"styles_form-input__input-wrapper__2DkJU\",\"form-input__input\":\"styles_form-input__input__3a2wq\",\"form-input__input_with-icon\":\"styles_form-input__input_with-icon__2ANgF\",\"form-input__input_error\":\"styles_form-input__input_error__1edUa\",\"form-input__input-icon\":\"styles_form-input__input-icon__28QMT\",\"form-input__error\":\"styles_form-input__error__kqGel\",\"form-input__error_display\":\"styles_form-input__error_display__3O_sq\",\"form-input__error_showing\":\"styles_form-input__error_showing__1014B\"};","export interface AuthState {\n  access_token: string | null;\n  isRefreshing: boolean;\n  isTryingToLogin: boolean;\n  errorRefreshing: string | null;\n  errorLogin: string | null;\n  isFirstRefreshDone: boolean;\n}\n\nexport enum AuthActionsEnum {\n  CLEAR_AUTH_ACTION = 'CLEAR_AUTH_ACTION',\n  SAVE_NEW_TOKEN_ACTION = 'SAVE_NEW_TOKEN_ACTION',\n  IS_REFRESHING_ACTION = 'IS_REFRESHING_ACTION',\n  IS_TRYING_LOGIN_ACTION = 'IS_TRYING_LOGIN_ACTION',\n  ERROR_LOGIN_ACTION = 'ERROR_LOGIN_ACTION',\n  ERROR_REFRESH_ACTION = 'ERROR_REFRESH_ACTION',\n}\n\nexport interface ClearAuthAction {\n  type: AuthActionsEnum.CLEAR_AUTH_ACTION;\n}\n\nexport interface SaveNewTokenAction {\n  type: AuthActionsEnum.SAVE_NEW_TOKEN_ACTION;\n  payload: string;\n}\n\nexport interface SetIsTokenRefreshingAction {\n  type: AuthActionsEnum.IS_REFRESHING_ACTION;\n  payload: boolean;\n}\n\nexport interface SetIsTryingToLoginAction {\n  type: AuthActionsEnum.IS_TRYING_LOGIN_ACTION;\n  payload: boolean;\n}\n\nexport interface SetRefreshingErrorAction {\n  type: AuthActionsEnum.ERROR_REFRESH_ACTION;\n  payload: string | null;\n}\n\nexport interface SetLoginErrorAction {\n  type: AuthActionsEnum.ERROR_LOGIN_ACTION;\n  payload: string | null;\n}\n\nexport type AuthAction =\n  | ClearAuthAction\n  | SaveNewTokenAction\n  | SetIsTokenRefreshingAction\n  | SetIsTryingToLoginAction\n  | SetRefreshingErrorAction\n  | SetLoginErrorAction;\n","import { AuthAction, AuthActionsEnum, AuthState } from './types';\n\nconst initialState: AuthState = {\n  access_token: null,\n  isRefreshing: true,\n  isTryingToLogin: false,\n  errorRefreshing: null,\n  errorLogin: null,\n  isFirstRefreshDone: false,\n};\n\nexport default function exampleReducer(\n  state = initialState,\n  action: AuthAction,\n): AuthState {\n  switch (action.type) {\n    case AuthActionsEnum.CLEAR_AUTH_ACTION:\n      return { ...initialState, isFirstRefreshDone: true };\n    case AuthActionsEnum.SAVE_NEW_TOKEN_ACTION:\n      return { ...state, access_token: action.payload, isFirstRefreshDone: true };\n    case AuthActionsEnum.IS_REFRESHING_ACTION:\n      return { ...state, isRefreshing: action.payload };\n    case AuthActionsEnum.IS_TRYING_LOGIN_ACTION:\n      return { ...state, isTryingToLogin: action.payload };\n    case AuthActionsEnum.ERROR_REFRESH_ACTION:\n      return { ...state, errorRefreshing: action.payload };\n    case AuthActionsEnum.ERROR_LOGIN_ACTION:\n      return { ...state, errorLogin: action.payload };\n    default:\n      return state;\n  }\n}\n","import auth from './authReducer';\n\nexport default {\n  auth,\n};\n","import axios, { AxiosError, AxiosResponse } from 'axios';\n\nimport { ICandidate, ICandidateName, ICandidateResult } from '../models/ICandidate';\nimport { store } from '../store';\nimport { AuthActionCreators } from '../store/reducers/authReducer/action-creators';\nconst { dispatch } = store;\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport enum API_URLS {\n  REFRESH_TOKENS = '/auth/refresh-tokens',\n  LOGIN = '/auth/login',\n  LOGOUT = '/auth/logout',\n  CANDIDATES_AND_AREAS_INFO = '/candidate-va-info',\n  DISTRICTS_TURNOUT = '/districts-turnout',\n  RESULTS_INFO = '/results',\n  TURNOUT_INFO = '/user-turnout',\n  CANDIDATES_INFO = '/user-results',\n  GET_VOTING_DATE = '/voting-date',\n  CHECK_PROTOCOL = '/check-protocol',\n}\n\napi.interceptors.response.use(undefined, async (error: AxiosError) => {\n  if (!error.response) {\n    return new Promise((_, reject) => {\n      reject(error);\n    });\n  }\n\n  if (error.response.status === 403) {\n    if (error.response.config.url === API_URLS.LOGIN) {\n      return new Promise((_, reject) => {\n        reject(error);\n      });\n    } else if (error.response.config.url === API_URLS.REFRESH_TOKENS) {\n      dispatch(AuthActionCreators.clearAuthState());\n      return new Promise((_, reject) => {\n        reject(error);\n      });\n    } else {\n      try {\n        const res = await VotingService.refreshTokens();\n        dispatch(AuthActionCreators.saveNewToken(res.data.access_token));\n        error.config.headers.Authorization = `Bearer ${res.data.access_token}`;\n        return api.request(error.config);\n      } catch (_) {\n        return new Promise((_, reject) => {\n          reject(error);\n        });\n      }\n    }\n  } else {\n    return new Promise((_, reject) => {\n      reject(error);\n    });\n  }\n});\n\nexport default class VotingService {\n  static async refreshTokens(): Promise<AxiosResponse<{ access_token: string }>> {\n    return api.get<{ access_token: string }>(API_URLS.REFRESH_TOKENS);\n  }\n  static async login(\n    login: string,\n    password: string,\n  ): Promise<AxiosResponse<{ access_token: string }>> {\n    return api.post<{ access_token: string }>(API_URLS.LOGIN, {\n      login,\n      password,\n    });\n  }\n\n  static async getUserInfo(access_token: string): Promise<AxiosResponse<any>> {\n    return api.get<any>('/user-info', {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n  }\n\n  static async getTurnoutInfo(access_token: string): Promise<\n    AxiosResponse<{\n      voting_area_id: number;\n      va_data: [\n        {\n          time: string;\n          count_voters: number;\n          client_add_time: 'morning' | 'day' | 'evening' | 'result';\n        },\n      ];\n      max_people: number;\n    }>\n  > {\n    return api.get<{\n      voting_area_id: number;\n      va_data: [\n        {\n          time: string;\n          count_voters: number;\n          client_add_time: 'morning' | 'day' | 'evening' | 'result';\n        },\n      ];\n      max_people: number;\n    }>(API_URLS.TURNOUT_INFO, {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n  }\n\n  static async sendTurnoutInfo(\n    access_token: string,\n    turnout: number,\n    client_add_time: 'morning' | 'day' | 'evening' | 'result',\n  ): Promise<AxiosResponse<any>> {\n    return api.post<any>(\n      API_URLS.TURNOUT_INFO,\n      {\n        turnout,\n        client_add_time,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n        },\n      },\n    );\n  }\n\n  static async sendResultsInfo(\n    access_token: string,\n    processed_bulletins: number,\n    spoiled_bulletins: number,\n    candidates: {\n      candidate_id: number;\n      count_votes: number;\n    }[],\n  ): Promise<AxiosResponse<any>> {\n    return api.post<any>(\n      API_URLS.CANDIDATES_INFO,\n      {\n        processed_bulletins,\n        spoiled_bulletins,\n        candidates,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n        },\n      },\n    );\n  }\n\n  static async getCandidatesInfo(access_token: string): Promise<\n    AxiosResponse<{\n      candidates: Array<ICandidateName>;\n    }>\n  > {\n    return api.get<{\n      candidates: Array<ICandidateName>;\n    }>(API_URLS.CANDIDATES_INFO, {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n  }\n\n  static async checkProtocolIsSent(access_token: string): Promise<\n    AxiosResponse<{\n      protocolExists: boolean;\n    }>\n  > {\n    return api.get<{\n      protocolExists: boolean;\n    }>(API_URLS.CHECK_PROTOCOL, {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n  }\n\n  static async getCandidatesAndAreasInfo(): Promise<\n    AxiosResponse<{\n      info: Array<ICandidate>;\n      count_opened: number;\n      count_people: number;\n    }>\n  > {\n    return api.get<{\n      info: Array<ICandidate>;\n      count_opened: number;\n      count_people: number;\n    }>(API_URLS.CANDIDATES_AND_AREAS_INFO);\n  }\n\n  static async getVotingDate(): Promise<\n    AxiosResponse<{\n      voting_date: string;\n    }>\n  > {\n    return api.get<{\n      voting_date: string;\n    }>(API_URLS.GET_VOTING_DATE);\n  }\n\n  static async getDistrictsTurnout(): Promise<AxiosResponse<any>> {\n    return api.get<{\n      districts_turnout: Array<{\n        district: string;\n        turnout: number;\n      }>;\n    }>(API_URLS.DISTRICTS_TURNOUT);\n  }\n\n  static async getResultsInfo(): Promise<\n    AxiosResponse<{\n      candidate_results: Array<ICandidateResult>;\n      turnout: number;\n      checked_bulletins_percentage: number;\n    }>\n  > {\n    return api.get<{\n      candidate_results: Array<ICandidateResult>;\n      turnout: number;\n      checked_bulletins_percentage: number;\n    }>(API_URLS.RESULTS_INFO);\n  }\n\n  static async logout(): Promise<AxiosResponse<{ message: string }>> {\n    return api.get<{ message: string }>(API_URLS.LOGOUT);\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst rootReducer = combineReducers(reducers);\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { AxiosError } from 'axios';\n\nimport VotingService from '../../../api/votingService';\nimport { AppDispatch } from '../..';\nimport {\n  AuthActionsEnum,\n  ClearAuthAction,\n  SaveNewTokenAction,\n  SetIsTokenRefreshingAction,\n  SetIsTryingToLoginAction,\n  SetLoginErrorAction,\n  SetRefreshingErrorAction,\n} from './types';\n\nexport const AuthActionCreators = {\n  clearAuthState: (): ClearAuthAction => ({\n    type: AuthActionsEnum.CLEAR_AUTH_ACTION,\n  }),\n  saveNewToken: (access_token: string): SaveNewTokenAction => ({\n    type: AuthActionsEnum.SAVE_NEW_TOKEN_ACTION,\n    payload: access_token,\n  }),\n  setIsRefreshing: (isRefreshing: boolean): SetIsTokenRefreshingAction => ({\n    type: AuthActionsEnum.IS_REFRESHING_ACTION,\n    payload: isRefreshing,\n  }),\n  setIsTryingLogin: (isTryingLogin: boolean): SetIsTryingToLoginAction => ({\n    type: AuthActionsEnum.IS_TRYING_LOGIN_ACTION,\n    payload: isTryingLogin,\n  }),\n  setLoginError: (error: string | null): SetLoginErrorAction => ({\n    type: AuthActionsEnum.ERROR_LOGIN_ACTION,\n    payload: error,\n  }),\n  setRefreshingError: (error: string | null): SetRefreshingErrorAction => ({\n    type: AuthActionsEnum.ERROR_REFRESH_ACTION,\n    payload: error,\n  }),\n  fetchRefreshTokens: () => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsRefreshing(true));\n      dispatch(AuthActionCreators.setRefreshingError(null));\n      const result = await VotingService.refreshTokens();\n      dispatch(AuthActionCreators.saveNewToken(result.data.access_token));\n      dispatch(AuthActionCreators.setIsRefreshing(false));\n    } catch (error) {\n      dispatch(AuthActionCreators.clearAuthState());\n      dispatch(\n        AuthActionCreators.setRefreshingError((error as AxiosError<string>).message),\n      );\n    }\n  },\n  fetchLogin: (login: string, password: string) => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsTryingLogin(true));\n      dispatch(AuthActionCreators.setLoginError(null));\n      const result = await VotingService.login(login, password);\n      dispatch(AuthActionCreators.saveNewToken(result.data.access_token));\n      dispatch(AuthActionCreators.setIsTryingLogin(false));\n    } catch (error) {\n      dispatch(AuthActionCreators.setIsTryingLogin(false));\n      dispatch(AuthActionCreators.setLoginError((error as AxiosError<string>).message));\n      setTimeout(() => {\n        dispatch(AuthActionCreators.setLoginError(null));\n      }, 2000);\n    }\n  },\n  fetchLogout: () => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsTryingLogin(true));\n      await VotingService.logout();\n      dispatch(AuthActionCreators.clearAuthState());\n    } catch (error) {\n      dispatch(AuthActionCreators.clearAuthState());\n    }\n  },\n};\n","export default __webpack_public_path__ + \"static/media/header-logo.edb235c9.svg\";","import { createContext } from 'react';\n\ninterface ITimeContext {\n  isDevNextDaySet: boolean;\n  votingDate: Date;\n  time: { hours: number; minutes: number };\n  clearCustomTime: () => void;\n  setCustomTime: (\n    hours: number,\n    minutes: number,\n    isNextDay?: boolean,\n    realTimeInSeconds?: number,\n  ) => void;\n}\n\nconst TimeContext = createContext({} as ITimeContext);\n\nTimeContext.displayName = 'timeContext';\n\nexport default TimeContext;\n","import { FC, useContext } from 'react';\n\nimport TimeContext from '../../context/timeContext';\n\nconst ClockTime: FC = () => {\n  const { time } = useContext(TimeContext);\n  return (\n    <>\n      {time.hours < 10 ? '0' + time.hours : time.hours}:\n      {time.minutes < 10 ? '0' + time.minutes : time.minutes}\n    </>\n  );\n};\n\nexport default ClockTime;\n","import classNames from 'classnames';\nimport { FC, memo } from 'react';\n\nimport HeaderLogoSvg from '../../img/header-logo.svg';\nimport ClockTime from './ClockTime';\nimport styles from './styles.module.scss';\n\ninterface HeaderProps {\n  isHideClocks?: boolean;\n  className?: string;\n}\n\nconst Header: FC<HeaderProps> = memo(function Header({\n  isHideClocks = false,\n  className,\n}) {\n  return (\n    <header className={classNames(styles['header'], className ? className : null)}>\n      <p\n        className={classNames(\n          styles['header__clock'],\n          isHideClocks ? styles['header__clock_hidden'] : null,\n        )}>\n        <ClockTime />\n      </p>\n      <img\n        src={HeaderLogoSvg}\n        alt=\"Выборы мэра Москвы лого\"\n        className={styles['header__logo']}\n      />\n    </header>\n  );\n});\n\nexport default Header;\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\n\nimport { RootState } from '../store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import classNames from 'classnames';\nimport { FC, ReactNode } from 'react';\n\nimport styles from './styles.module.scss';\n\ninterface FormButtonProps {\n  type: 'button' | 'submit';\n  className?: string;\n  disabled?: boolean;\n  children: ReactNode;\n  onClick?: () => void;\n  redColor?: boolean;\n}\n\nconst FormButton: FC<FormButtonProps> = ({\n  type,\n  className,\n  disabled,\n  children,\n  onClick,\n  redColor,\n}) => {\n  return (\n    <button\n      type={type}\n      className={classNames(\n        styles['form-button'],\n        redColor ? styles['form-button_color_red'] : null,\n        className,\n        disabled ? styles['form-button_color_gray'] : null,\n      )}\n      disabled={!!disabled}\n      onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default FormButton;\n","import { FC, useState } from 'react';\n\nimport VotingService from '../../../../api/votingService';\nimport FormButton from '../../../../components/FormButton/FormButton';\nimport styles from './styles.module.scss';\n\ninterface FinalScreenProps {\n  isProtocolSent: boolean | null;\n}\n\nconst FinalScreen: FC<FinalScreenProps> = ({ isProtocolSent }: FinalScreenProps) => {\n  const [isLogout, setIsLogout] = useState(false);\n\n  const makeLogout = async () => {\n    setIsLogout(true);\n    await VotingService.logout();\n    setIsLogout(false);\n    document.location.reload();\n  };\n\n  return (\n    <div className={styles['wrapper']}>\n      <div className={styles['final__content']}>\n        <p className={styles['final__header']}>\n          {isProtocolSent\n            ? 'Спасибо за работу!'\n            : 'Вы не ввели данные голосование окончено'}{' '}\n        </p>\n        <FormButton\n          type=\"button\"\n          onClick={makeLogout}\n          disabled={isLogout}\n          className={styles['final__button']}>\n          Выйти\n        </FormButton>\n      </div>\n    </div>\n  );\n};\n\nexport default FinalScreen;\n","import classNames from 'classnames';\nimport { FC } from 'react';\n\nimport styles from './styles.module.scss';\n\ninterface LoadingSpinnerProps {\n  className?: string;\n  isPrimaryColor?: boolean;\n}\n\nconst LoadingSpinner: FC<LoadingSpinnerProps> = ({ className, isPrimaryColor }) => {\n  return (\n    <div\n      className={classNames(\n        styles['spinner'],\n        isPrimaryColor ? styles['spinner_primary-color'] : null,\n        className ? className : null,\n      )}></div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ModalProps {\n  children: React.ReactNode;\n}\n\nexport const Modal = ({ children }: ModalProps) => {\n  const [modalRoot] = useState(document.createElement('div'));\n  useEffect(() => {\n    document.body.appendChild(modalRoot);\n    return () => {\n      document.body.removeChild(modalRoot);\n    };\n  }, []);\n  return ReactDOM.createPortal(children, modalRoot);\n};\n","import { FC, ReactNode } from 'react';\n\nimport FormButton from '../FormButton/FormButton';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport { Modal } from '../Modal';\nimport styles from './styles.module.scss';\n\ninterface ConfirmPopupProps {\n  onConfirm: () => void;\n  onClose: () => void;\n  title: ReactNode;\n  children?: ReactNode;\n  isSubmitting?: boolean;\n}\n\nconst ConfirmPopup: FC<ConfirmPopupProps> = ({\n  onConfirm,\n  onClose,\n  title,\n  children,\n  isSubmitting,\n}) => {\n  return (\n    <Modal>\n      <div className={styles['popup__background']}>\n        <div className={styles['popup__content']}>\n          <div className={styles['popup__props']}>\n            {title}\n            {children && children}\n          </div>\n\n          <div className={styles['popup__buttons-block']}>\n            <FormButton\n              type={'button'}\n              onClick={onClose}\n              redColor\n              className={styles['popup__button']}>\n              Отмена\n            </FormButton>\n            <FormButton\n              type={'button'}\n              onClick={onConfirm}\n              disabled={isSubmitting}\n              className={styles['popup__button']}>\n              {isSubmitting ? <LoadingSpinner /> : 'Подтвердить'}\n            </FormButton>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ConfirmPopup;\n","export default __webpack_public_path__ + \"static/media/alert.d3f61112.svg\";","import classNames from 'classnames';\nimport { FC } from 'react';\n\nimport AlertSvg from '../../img/alert.svg';\nimport styles from './styles.module.scss';\n\ninterface ErrorAlertProps {\n  header: string;\n  description: string;\n  className?: string;\n}\n\nconst ErrorAlert: FC<ErrorAlertProps> = (props) => {\n  return (\n    <div\n      className={classNames(\n        styles['error-alert'],\n        props.className ? props.className : null,\n      )}>\n      <img src={AlertSvg} alt=\"Error img\" className={styles['error-alert__icon']} />\n      <div className={styles['error-alert__content']}>\n        <span className={styles['error-alert__header']}>{props.header}</span>\n        <span className={styles['error-alert__description']}>{props.description}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorAlert;\n","import classNames from 'classnames';\nimport { FC, useState } from 'react';\n\nimport styles from './styles.module.scss';\n\ninterface FormInputProps {\n  type: string;\n  value: any;\n  onChange: any;\n  onBlur: any;\n  className?: string;\n  classNameForInput?: string;\n  classNameForError?: string;\n  showError: boolean;\n  errorMessage: string;\n  labelName: string;\n  name: string;\n  id: string;\n  required: boolean;\n  hasIcon?: boolean;\n  iconUrl?: string;\n  placeholder?: string;\n  hideLabel?: boolean;\n  useErrorDisplay?: boolean;\n  disabled?: boolean;\n}\n\nconst FormInput: FC<FormInputProps> = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <div\n      className={classNames(\n        styles['form-input'],\n        props.className ? props.className : null,\n      )}>\n      {!props.hideLabel ? (\n        <label htmlFor={props.id} className={styles['form-input__label']}>\n          {props.labelName}\n        </label>\n      ) : null}\n\n      <div\n        className={classNames(\n          styles['form-input__input-wrapper'],\n          props.classNameForInput ? props.classNameForInput : null,\n        )}>\n        <input\n          type={showPassword ? 'text' : props.type}\n          placeholder={props.placeholder || ''}\n          value={props.value}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          className={classNames(\n            styles['form-input__input'],\n            props.showError ? styles['form-input__input_error'] : null,\n            props.hasIcon ? styles['form-input__input_with-icon'] : null,\n          )}\n          id={props.id}\n          name={props.name}\n          required={props.required}\n          disabled={!!props.disabled}\n        />\n        {props.hasIcon && props.iconUrl ? (\n          <img\n            src={props.iconUrl}\n            alt=\"\"\n            className={styles['form-input__input-icon']}\n            onClick={() => {\n              setShowPassword((prev) => !prev);\n            }}\n          />\n        ) : null}\n      </div>\n\n      <small\n        className={classNames(\n          styles['form-input__error'],\n          props.classNameForError ? props.classNameForError : null,\n          props.useErrorDisplay ? styles['form-input__error_display'] : null,\n          props.showError ? styles['form-input__error_showing'] : null,\n        )}>\n        {props.errorMessage}\n      </small>\n    </div>\n  );\n};\n\nexport default FormInput;\n","import classNames from 'classnames';\nimport { Field, FieldArray, Formik, validateYupSchema, yupToFormErrors } from 'formik';\nimport { FC, useContext, useEffect, useState } from 'react';\nimport * as yup from 'yup';\n\nimport VotingService from '../../../../api/votingService';\nimport ConfirmPopup from '../../../../components/ConfirmPopup/ConfirmPopup';\nimport ErrorAlert from '../../../../components/ErrorAlert/ErrorAlert';\nimport FormButton from '../../../../components/FormButton/FormButton';\nimport FormInput from '../../../../components/FormInput/FormInput';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport TimeContext from '../../../../context/timeContext';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport history from '../../../../utils/history';\nimport styles from './styles.module.scss';\n\ninterface Props {\n  setIsProtocolSent: (res: boolean) => void;\n}\n\nconst ProtocolInput: FC<Props> = ({ setIsProtocolSent }: Props) => {\n  const { access_token } = useTypedSelector((state) => state.auth);\n  const [candidates, setCandidates] = useState<\n    {\n      candidate_id: number;\n      candidate: string;\n    }[]\n  >([]);\n\n  const {\n    time: { minutes, hours },\n    isDevNextDaySet,\n  } = useContext(TimeContext);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [isSendingError, setIsSendingError] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isSendingResults, setIsSendingResults] = useState(false);\n\n  const [turnoutResults, setTurnoutResults] = useState({\n    turnout: 0,\n    maxPeople: 0,\n  });\n\n  const closePopup = (setSubmitting: (param: boolean) => void) => {\n    setIsPopupOpen(false);\n    setSubmitting(false);\n  };\n\n  const sendResults = async (\n    data: {\n      processed_bulletins: number;\n      spoiled_bulletins: number;\n      candidates: {\n        candidate_id: number;\n        count_votes: number;\n      }[];\n    },\n    setSubmitting: (param: boolean) => void,\n    resetForm: () => void,\n  ) => {\n    try {\n      setIsSendingError(false);\n      setIsSendingResults(true);\n      await VotingService.sendResultsInfo(\n        access_token!,\n        data.processed_bulletins,\n        data.spoiled_bulletins,\n        data.candidates,\n      );\n      resetForm();\n      setIsSendingResults(false);\n      closePopup(setSubmitting);\n      setIsProtocolSent(true);\n    } catch (error) {\n      setIsSendingResults(false);\n      setIsSendingError(true);\n      console.error(error);\n    }\n  };\n\n  const fetchInfo = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      const resultCandidates = (await VotingService.getCandidatesInfo(access_token!))\n        .data;\n      const resultTurnout = (await VotingService.getTurnoutInfo(access_token!)).data;\n\n      setTurnoutResults({\n        turnout: resultTurnout.va_data.reduce(\n          (prev, current) => (prev < current.count_voters ? current.count_voters : prev),\n          0,\n        ),\n        maxPeople: resultTurnout.max_people,\n      });\n      setCandidates(resultCandidates.candidates);\n      setIsLoading(false);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n\n  const getSurnameNP = (fullName: string) => {\n    return (\n      fullName.split(' ')[0] +\n      ' ' +\n      fullName.split(' ')[1][0] +\n      '. ' +\n      fullName.split(' ')[2][0] +\n      '.'\n    );\n  };\n\n  const getNameSurname = (fullName: string) => {\n    return fullName.split(' ')[1] + ' ' + fullName.split(' ')[0];\n  };\n\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n\n  useEffect(() => {\n    if (isDevNextDaySet && (hours > 8 || (hours === 8 && minutes >= 46))) {\n      setIsProtocolSent(false);\n      history.push('/employee-page/final');\n    }\n  }, [minutes, hours, isDevNextDaySet]);\n\n  const validationSchema = yup.object().shape({\n    bulletinsCount: yup\n      .number()\n      .typeError('Должно быть числом')\n      .min(0, 'Не может быть меньше 0')\n      .max(\n        turnoutResults.turnout,\n        `Не может быть больше итоговой явки (${turnoutResults.turnout} чел)`,\n      )\n      .test(\n        'testPassedCount',\n        'Должно быть равно сумме испорченных + за всех кандидатов',\n        function (value) {\n          const candidatesVotesCount = this.options.context!.candidateVotes.reduce(\n            (prev: number, current: { value: number }) => prev + current.value,\n            0,\n          );\n          if (\n            value! !==\n            this.options.context!.spoiledBulletinsCount + candidatesVotesCount\n          )\n            return false;\n          return true;\n        },\n      )\n      .required('Обязательное поле'),\n    spoiledBulletinsCount: yup\n      .number()\n      .typeError('Должно быть числом')\n      .min(0, 'Не может быть меньше 0')\n      .required('Обязательное поле')\n      .test('testSpoiledCount', 'Должно быть не больше обработанных', function (value) {\n        if (value! > this.options.context!.bulletinsCount) return false;\n        return true;\n      }),\n    candidateVotes: yup\n      .array()\n      .of(\n        yup.object().shape({\n          value: yup\n            .number()\n            .typeError('Должно быть числом')\n            .min(0, 'Не может быть меньше 0')\n            .required('Обязательное поле')\n            .test(\n              'testVotesCount',\n              'Должно быть не больше обработанных',\n              function (value) {\n                if (value! > this.options.context!.bulletinsCount) return false;\n                return true;\n              },\n            ),\n        }),\n      )\n      .required('Необходимо заполнить голоса'),\n  });\n  return (\n    <div\n      className={classNames(\n        styles['protocol'],\n        isError || isLoading ? styles['protocol_empty'] : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['protocol__loader']} isPrimaryColor />\n      ) : isError ? (\n        <div className={styles['protocol__error']}>\n          <span className={styles['error-text']}>\n            Произошла ошибка. Проверьте соединение с интернетом\n          </span>\n          <FormButton\n            type=\"button\"\n            disabled={false}\n            className={styles['error-btn']}\n            onClick={fetchInfo}>\n            Перезагрузить данные\n          </FormButton>\n        </div>\n      ) : (\n        <Formik\n          initialValues={{\n            bulletinsCount: 0,\n            spoiledBulletinsCount: 0,\n            candidateVotes: [...candidates.map((item) => ({ ...item, value: 0 }))],\n          }}\n          validate={(values) => {\n            try {\n              validateYupSchema(values, validationSchema, true, values);\n            } catch (err) {\n              return yupToFormErrors(err);\n            }\n          }}\n          onSubmit={() => {\n            setIsPopupOpen(true);\n          }}>\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            isValid,\n            setSubmitting,\n            resetForm,\n          }) => (\n            <form\n              onSubmit={handleSubmit}\n              className={classNames(styles['protocol__form'], styles['protocol-form'])}>\n              <div className={classNames(styles['protocol-form__wrapper'])}>\n                <div\n                  className={classNames(\n                    styles['protocol-form__bulletins'],\n                    styles['bulletins'],\n                  )}>\n                  <p className={styles['protocol-form__description']}>\n                    Введите количество <br />{' '}\n                    <span className={'bold-text'}>обработанных </span> бюллетеней\n                  </p>\n                  <FormInput\n                    labelName=\"Явка\"\n                    id=\"bulletinsCount\"\n                    name=\"bulletinsCount\"\n                    type=\"number\"\n                    value={values.bulletinsCount}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    errorMessage={errors.bulletinsCount || ''}\n                    required\n                    showError={!!(touched.bulletinsCount && errors.bulletinsCount)}\n                    hideLabel\n                    className={styles['bulletins__input']}\n                    classNameForInput={styles['bulletins__input-block']}\n                    classNameForError={styles['bulletins__input-error']}\n                  />\n                  <p className={styles['protocol-form__description']}>\n                    Введите количество <br />{' '}\n                    <span className={'bold-text'}>испорченных </span> бюллетеней\n                  </p>\n                  <FormInput\n                    labelName=\"Явка\"\n                    id=\"spoiledBulletinsCount\"\n                    name=\"spoiledBulletinsCount\"\n                    type=\"number\"\n                    value={values.spoiledBulletinsCount}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    errorMessage={errors.spoiledBulletinsCount || ''}\n                    required={true}\n                    showError={\n                      !!(touched.spoiledBulletinsCount && errors.spoiledBulletinsCount)\n                    }\n                    hideLabel\n                    className={styles['bulletins__input']}\n                    classNameForInput={styles['bulletins__input-block']}\n                    classNameForError={styles['bulletins__input-error']}\n                  />\n                </div>\n                <div\n                  className={classNames(styles['protocol-form__votes'], styles['votes'])}>\n                  <p className={styles['protocol-form__description']}>\n                    Введите <span className={'bold-text'}>количество</span> голосов по\n                    кандидатам\n                  </p>\n                  <FieldArray\n                    name=\"candidateVotes\"\n                    render={() => (\n                      <div className={styles['votes__candidate-list']}>\n                        {values.candidateVotes.map((item, index) => (\n                          <div\n                            key={index}\n                            className={classNames(\n                              styles['votes__input-block'],\n                              errors.candidateVotes && errors.candidateVotes[index]\n                                ? styles['votes__input-block_error']\n                                : null,\n                            )}>\n                            <label\n                              htmlFor={`candidateVotes[${index}]`}\n                              className={styles['votes__label']}>\n                              {getSurnameNP(item.candidate)}\n                            </label>\n                            <Field\n                              type=\"number\"\n                              name={`candidateVotes[${index}].value`}\n                              id={`candidateVotes[${index}]`}\n                              required\n                              className={styles['votes__input']}\n                            />\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  />\n                </div>\n              </div>\n\n              <ErrorAlert\n                header=\"Ошибка отправки\"\n                description=\"Проверьте данные и попробуйте ещё раз\"\n                className={classNames(\n                  styles['protocol-form__main-error'],\n                  styles['protocol-form__main-error_hidden'],\n                )}\n              />\n              <p\n                className={classNames(\n                  styles['protocol-form__time-left'],\n                  styles['protocol-form__time-left_hidden'],\n                )}>\n                до конца ввода данных протокола <span className={'bold-text'}>18</span>{' '}\n                минут{' '}\n              </p>\n              <FormButton\n                type=\"submit\"\n                disabled={!isValid && isSubmitting}\n                className={styles['protocol-form__submit-btn']}>\n                Отправить\n              </FormButton>\n\n              {isPopupOpen ? (\n                <ConfirmPopup\n                  isSubmitting={isSendingResults}\n                  onClose={() => closePopup(setSubmitting)}\n                  title={\n                    <p className={styles['popup-title']}>\n                      Вы ввели результаты обработки бюллетеней\n                    </p>\n                  }\n                  onConfirm={() => {\n                    const resultsObj = {\n                      processed_bulletins: values.bulletinsCount,\n                      spoiled_bulletins: values.spoiledBulletinsCount,\n                      candidates: values.candidateVotes.map((item) => ({\n                        candidate_id: item.candidate_id,\n                        count_votes: item.value,\n                      })),\n                    };\n                    sendResults(resultsObj, setSubmitting, resetForm);\n                  }}>\n                  <>\n                    <div className={styles['popup-content']}>\n                      <div className={styles['popup-content__votes-type']}>\n                        <p>Обработанных: {values.bulletinsCount}</p>\n                        <p>Испорченных: {values.spoiledBulletinsCount}</p>\n                      </div>\n                      <div className={styles['popup-content__candidates-list']}>\n                        {values.candidateVotes.map((item) => {\n                          return (\n                            <p key={item.candidate_id}>\n                              {getNameSurname(\n                                values.candidateVotes.find(\n                                  (val) => val.candidate_id === item.candidate_id,\n                                )?.candidate!,\n                              ) +\n                                ': ' +\n                                item.value}\n                            </p>\n                          );\n                        })}\n                      </div>\n                    </div>\n                    {isSendingError ? (\n                      <ErrorAlert\n                        header=\"Ошибка отправки\"\n                        description=\"Проверьте подключение к интернету\"\n                      />\n                    ) : null}\n                  </>\n                </ConfirmPopup>\n              ) : null}\n            </form>\n          )}\n        </Formik>\n      )}\n    </div>\n  );\n};\n\nexport default ProtocolInput;\n","export const timePeriods: {\n  tableTime: string;\n  count: number | null;\n  available: {\n    from: {\n      hours: number;\n      minutes: number;\n    };\n    to: {\n      hours: number;\n      minutes: number;\n    };\n  };\n  withNextDay: boolean;\n  partOfDay: 'morning' | 'day' | 'evening' | 'result';\n  status: 'waiting' | 'fail' | 'success';\n}[] = [\n  {\n    tableTime: '12:00',\n    count: null,\n    available: {\n      from: {\n        hours: 11,\n        minutes: 30,\n      },\n      to: {\n        hours: 11,\n        minutes: 45,\n      },\n    },\n    withNextDay: false,\n    partOfDay: 'morning',\n    status: 'waiting',\n  },\n  {\n    tableTime: '15:00',\n    count: null,\n    available: {\n      from: {\n        hours: 14,\n        minutes: 30,\n      },\n      to: {\n        hours: 14,\n        minutes: 45,\n      },\n    },\n    withNextDay: false,\n    partOfDay: 'day',\n    status: 'waiting',\n  },\n  {\n    tableTime: '18:00',\n    count: null,\n    available: {\n      from: {\n        hours: 17,\n        minutes: 30,\n      },\n      to: {\n        hours: 17,\n        minutes: 45,\n      },\n    },\n    withNextDay: false,\n    partOfDay: 'evening',\n    status: 'waiting',\n  },\n  {\n    tableTime: 'result',\n    count: null,\n    available: {\n      from: {\n        hours: 20,\n        minutes: 0,\n      },\n      to: {\n        hours: 8,\n        minutes: 45,\n      },\n    },\n    withNextDay: true,\n    partOfDay: 'result',\n    status: 'waiting',\n  },\n];\n","import classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { FC, useContext, useEffect, useState } from 'react';\nimport * as yup from 'yup';\n\nimport VotingService from '../../../../api/votingService';\nimport ConfirmPopup from '../../../../components/ConfirmPopup/ConfirmPopup';\nimport ErrorAlert from '../../../../components/ErrorAlert/ErrorAlert';\nimport FormButton from '../../../../components/FormButton/FormButton';\nimport FormInput from '../../../../components/FormInput/FormInput';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport TimeContext from '../../../../context/timeContext';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport history from '../../../../utils/history';\nimport styles from './styles.module.scss';\nimport { timePeriods } from './timePeriods';\n\nconst TurnoutInput: FC = () => {\n  const {\n    time: { minutes, hours },\n    isDevNextDaySet,\n  } = useContext(TimeContext);\n\n  const { access_token } = useTypedSelector((state) => state.auth);\n\n  const [info, setInfo] = useState<{\n    votingAreaId: number;\n    max_people: number;\n  }>({\n    votingAreaId: 0,\n    max_people: 0,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [isSendingError, setIsSendingError] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isSendingTurnout, setIsSendingTurnout] = useState(false);\n  const [timePeriodsInfo, setTimePeriodsInfo] = useState(timePeriods);\n\n  const getCurrentPeriod = (hours: number, minutes: number, isNextDay: boolean) => {\n    return timePeriodsInfo.find((item) => {\n      if (\n        (isNextDay || (hours === 17 && minutes >= 46) || hours > 17) &&\n        item.partOfDay === 'result'\n      ) {\n        return true;\n      }\n      if (\n        (hours < 11 || (hours === 11 && minutes <= 45)) &&\n        item.partOfDay === 'morning' &&\n        !isNextDay\n      )\n        return true;\n      if (\n        (hours < 14 || (hours === 14 && minutes <= 45)) &&\n        item.partOfDay === 'day' &&\n        !isNextDay\n      )\n        return true;\n      if (\n        (hours < 17 || (hours === 17 && minutes <= 45)) &&\n        item.partOfDay === 'evening' &&\n        !isNextDay\n      )\n        return true;\n    });\n  };\n\n  const [currentPeriodInfo, setCurrentPeriodInfo] = useState(\n    getCurrentPeriod(hours, minutes, isDevNextDaySet),\n  );\n\n  const closePopup = (setSubmitting: (param: boolean) => void) => {\n    setIsPopupOpen(false);\n    setSubmitting(false);\n  };\n\n  const sendTurnout = async (\n    votersCount: number,\n    setSubmitting: (param: boolean) => void,\n    resetForm: () => void,\n  ) => {\n    try {\n      setIsSendingError(false);\n      setIsSendingTurnout(true);\n      await VotingService.sendTurnoutInfo(\n        access_token!,\n        votersCount,\n        hours === 11\n          ? 'morning'\n          : hours === 14\n          ? 'day'\n          : hours === 17\n          ? 'evening'\n          : 'result',\n      );\n      await fetchInfoSilent();\n      resetForm();\n      setIsSendingTurnout(false);\n      closePopup(setSubmitting);\n    } catch (error) {\n      setIsSendingTurnout(false);\n      setIsSendingError(true);\n      console.error(error);\n    }\n  };\n\n  const refreshTimePeriodsInfo = (\n    fetched?: {\n      time: string;\n      count_voters?: number;\n      client_add_time: 'morning' | 'day' | 'evening' | 'result';\n    }[],\n  ) => {\n    const updatedFetchedInfo =\n      fetched &&\n      fetched.map((obj) => ({\n        count: obj.count_voters!,\n        partOfDay: obj.client_add_time,\n      }));\n\n    const newPeriods = timePeriodsInfo.map((item) => {\n      const oldInfo =\n        updatedFetchedInfo && updatedFetchedInfo.length\n          ? updatedFetchedInfo.find((obj) => obj.partOfDay === item.partOfDay)\n          : timePeriodsInfo.find((obj) => obj.partOfDay === item.partOfDay);\n\n      if (oldInfo && oldInfo.count !== null) {\n        item.count = oldInfo.count;\n        item.status = 'success';\n        return item;\n      } else {\n        if (\n          ((hours < 11 || (hours === 11 && minutes <= 45)) &&\n            item.partOfDay === 'morning' &&\n            !isDevNextDaySet) ||\n          ((hours < 14 || (hours === 14 && minutes <= 45)) &&\n            item.partOfDay === 'day' &&\n            !isDevNextDaySet) ||\n          ((hours < 17 || (hours === 17 && minutes <= 45)) &&\n            item.partOfDay === 'evening' &&\n            !isDevNextDaySet) ||\n          item.partOfDay === 'result' ||\n          (isDevNextDaySet && ((hours === 8 && minutes <= 45) || hours < 8))\n        ) {\n          return item;\n        } else {\n          item.status = 'fail';\n          return item;\n        }\n      }\n    });\n\n    setTimePeriodsInfo(newPeriods);\n  };\n\n  const fetchInfo = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      const result = (await VotingService.getTurnoutInfo(access_token!)).data;\n      if (result.va_data.find((item) => item.client_add_time === 'result')) {\n        history.push('/employee-page/protocol');\n      } else {\n        refreshTimePeriodsInfo(result.va_data);\n        setInfo({\n          max_people: result.max_people,\n          votingAreaId: result.voting_area_id,\n        });\n        setIsLoading(false);\n      }\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n\n  const fetchInfoSilent = async () => {\n    try {\n      const result = (await VotingService.getTurnoutInfo(access_token!)).data;\n      if (result.va_data.find((item) => item.client_add_time === 'result')) {\n        history.push('/employee-page/protocol');\n      } else {\n        refreshTimePeriodsInfo(result.va_data);\n        setInfo({\n          max_people: result.max_people,\n          votingAreaId: result.voting_area_id,\n        });\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n\n  useEffect(() => {\n    refreshTimePeriodsInfo();\n  }, [hours, minutes, isDevNextDaySet]);\n\n  useEffect(() => {\n    setCurrentPeriodInfo(getCurrentPeriod(hours, minutes, isDevNextDaySet));\n  }, [timePeriodsInfo]);\n\n  useEffect(() => {\n    if (\n      currentPeriodInfo?.partOfDay === 'result' &&\n      (currentPeriodInfo.status === 'success' || currentPeriodInfo.status === 'fail')\n    ) {\n      history.push('/employee-page/protocol');\n    }\n  }, [currentPeriodInfo]);\n\n  const minVotersCount = () => {\n    let maxValue = 0;\n    timePeriodsInfo.forEach((item) => {\n      if (item.count && item.count > maxValue) {\n        maxValue = item.count;\n      }\n    });\n    return maxValue;\n  };\n\n  const validationSchema = yup.object().shape({\n    votersCount: yup\n      .number()\n      .typeError('Должно быть числом')\n      .min(\n        minVotersCount() > 0 ? minVotersCount() : 0,\n        minVotersCount() > 0\n          ? `Не может быть меньше уже введенной явки (${minVotersCount()} чел.)`\n          : 'Не может быть меньше 0',\n      )\n      .max(\n        info.max_people,\n        `Не может быть больше кол-ва людей приписанного к участку (${info.max_people} чел)`,\n      )\n      .required('Обязательное поле'),\n  });\n\n  const isInputAccessibleByTime = () => {\n    return (\n      currentPeriodInfo?.status === 'waiting' &&\n      ((hours === currentPeriodInfo.available.from.hours &&\n        minutes >= currentPeriodInfo.available.from.minutes &&\n        minutes <= currentPeriodInfo.available.to.minutes) ||\n        (currentPeriodInfo.partOfDay === 'result' &&\n          ((isDevNextDaySet && (hours < 8 || (hours === 8 && minutes <= 45))) ||\n            hours >= 20)))\n    );\n  };\n\n  const showAccessTimeForInput = () => {\n    if (currentPeriodInfo?.partOfDay === 'result') {\n      if (hours >= 17 && hours < 20) {\n        return 'c 20:00';\n      } else {\n        return 'до 8:45';\n      }\n    } else {\n      return `с ${currentPeriodInfo?.available.from.hours}:${currentPeriodInfo?.available.from.minutes} до ${currentPeriodInfo?.available.to.hours}:${currentPeriodInfo?.available.to.minutes}`;\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\n        styles['voters'],\n        isError || isLoading ? styles['voters_empty'] : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['voters__loader']} isPrimaryColor />\n      ) : isError ? (\n        <div className={styles['voters__error']}>\n          <span className={styles['error-text']}>\n            Произошла ошибка. Проверьте соединение с интернетом\n          </span>\n          <FormButton\n            type=\"button\"\n            disabled={false}\n            className={styles['error-btn']}\n            onClick={fetchInfo}>\n            Перезагрузить данные\n          </FormButton>\n        </div>\n      ) : (\n        <>\n          <div className={styles['voters__results']}>\n            <table className={styles['resluts-table']}>\n              <caption className={styles['resluts-table__header']}>\n                Участок №{info.votingAreaId}\n              </caption>\n              <thead>\n                <tr>\n                  <th>Время</th>\n                  <th>Явка, чел.</th>\n                </tr>\n              </thead>\n              <tbody>\n                {timePeriodsInfo\n                  .filter((item) => item.partOfDay !== 'result')\n                  .map((item) => {\n                    return (\n                      <tr key={item.partOfDay}>\n                        <td>{item.tableTime}</td>\n                        <td\n                          className={\n                            item.status === 'fail'\n                              ? styles['turnout-error']\n                              : item.status === 'success'\n                              ? styles['turnout-success']\n                              : undefined\n                          }>\n                          {item.status === 'waiting'\n                            ? 'Ожидается ввод'\n                            : item.status === 'fail'\n                            ? 'Не предоставлено'\n                            : item.count}\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n          <div className={styles['voters__content-container']}>\n            <div className={styles['content']}>\n              <Formik\n                initialValues={{ votersCount: 0 }}\n                validationSchema={validationSchema}\n                onSubmit={() => {\n                  setIsPopupOpen(true);\n                }}>\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  setSubmitting,\n                  resetForm,\n                }) => (\n                  <form onSubmit={handleSubmit} className={styles['voters-form']}>\n                    <ErrorAlert\n                      header=\"Ошибка отправки\"\n                      description=\"Проверьте данные и попробуйте ещё раз\"\n                      className={classNames(styles['voters-form__main-error'])}\n                    />\n                    <p className={styles['voters-form__description']}>\n                      Введите{' '}\n                      {currentPeriodInfo && currentPeriodInfo.partOfDay === 'result'\n                        ? 'общее'\n                        : null}{' '}\n                      <span className={'bold-text'}>количество</span> избирателей,\n                      явившихся на участок\n                      {currentPeriodInfo && currentPeriodInfo.partOfDay !== 'result' ? (\n                        <>\n                          {' '}\n                          к{' '}\n                          <span className={'bold-text'}>\n                            {currentPeriodInfo.tableTime}\n                          </span>\n                        </>\n                      ) : null}\n                    </p>\n                    <p className={styles['voters-form__time-left']} style={{ margin: 0 }}>\n                      Поле ввода доступно {showAccessTimeForInput()}\n                    </p>\n                    <FormInput\n                      labelName=\"Явка\"\n                      id=\"votersCount\"\n                      name=\"votersCount\"\n                      type=\"number\"\n                      value={values.votersCount}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      errorMessage={errors.votersCount || ''}\n                      required={true}\n                      showError={!!(touched.votersCount && errors.votersCount)}\n                      hideLabel\n                      useErrorDisplay\n                      disabled={!isInputAccessibleByTime()}\n                    />\n                    {isInputAccessibleByTime() ? (\n                      <p\n                        className={classNames(\n                          styles['voters-form__time-left'],\n                          (currentPeriodInfo?.partOfDay === 'result' &&\n                            hours === 8 &&\n                            minutes >= 30) ||\n                            currentPeriodInfo?.partOfDay !== 'result'\n                            ? 45 - minutes <= 5\n                              ? styles['voters-form__time-left_alert']\n                              : null\n                            : null,\n                        )}>\n                        {(currentPeriodInfo?.partOfDay === 'result' &&\n                          hours === 8 &&\n                          minutes >= 30) ||\n                        currentPeriodInfo?.partOfDay !== 'result' ? (\n                          45 - minutes === 0 ? (\n                            <span className={styles['time-count']}>\n                              до конца ввода явки менее минуты\n                            </span>\n                          ) : (\n                            <>\n                              до конца ввода явки{' '}\n                              <span className={styles['time-count']}>{45 - minutes}</span>{' '}\n                              минут\n                            </>\n                          )\n                        ) : null}\n                      </p>\n                    ) : (\n                      <p className={styles['voters-form__time-left']} />\n                    )}\n\n                    <FormButton\n                      type=\"submit\"\n                      disabled={!isValid || isSubmitting || !isInputAccessibleByTime()}>\n                      Отправить\n                    </FormButton>\n                    {isPopupOpen ? (\n                      <ConfirmPopup\n                        isSubmitting={isSendingTurnout}\n                        onClose={() => closePopup(setSubmitting)}\n                        title={\n                          <p className={styles['popup-title']}>\n                            Вы ввели общее количество избирателей{' '}\n                            {currentPeriodInfo &&\n                            currentPeriodInfo.partOfDay !== 'result' ? (\n                              <>\n                                {' '}\n                                к{' '}\n                                <span className={'bold-text'}>\n                                  {currentPeriodInfo.tableTime}\n                                </span>\n                              </>\n                            ) : null}{' '}\n                            <br />\n                            <span className={styles['popup-title__people-count']}>\n                              {values.votersCount}\n                            </span>{' '}\n                            человек\n                          </p>\n                        }\n                        onConfirm={() =>\n                          sendTurnout(values.votersCount, setSubmitting, resetForm)\n                        }>\n                        {isSendingError ? (\n                          <ErrorAlert\n                            header=\"Ошибка отправки\"\n                            description=\"Проверьте подключение к интернету\"\n                          />\n                        ) : null}\n                      </ConfirmPopup>\n                    ) : null}\n                  </form>\n                )}\n              </Formik>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TurnoutInput;\n","import { FC, useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport VotingService from '../../api/votingService';\nimport Header from '../../components/Header/Header';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport history from '../../utils/history';\nimport FinalScreen from './pages/finalScreen/FinalScreen';\nimport ProtocolInput from './pages/protocolInput/ProtocolInput';\nimport TurnoutInput from './pages/turnoutInput/TurnoutInput';\nimport styles from './styles.module.scss';\n\nconst Employee: FC = () => {\n  const { access_token } = useTypedSelector((state) => state.auth);\n  const [isProtocolSent, setIsProtocolSent] = useState<boolean | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const checkProtocol = async () => {\n    setIsLoading(true);\n    const result = (await VotingService.checkProtocolIsSent(access_token!)).data;\n    if (result.protocolExists) {\n      setIsProtocolSent(true);\n      history.push('/employee-page/final');\n    } else {\n      history.push('/employee-page/turnout');\n    }\n    setIsLoading(false);\n  };\n\n  const changeProtocolSent = (result: boolean) => {\n    setIsProtocolSent(result);\n  };\n\n  useEffect(() => {\n    checkProtocol();\n  }, []);\n\n  useEffect(() => {\n    if (isProtocolSent !== null) {\n      history.push('/employee-page/final');\n    }\n  }, [isProtocolSent]);\n\n  return (\n    <div className={styles['employee-page']}>\n      {isLoading ? null : (\n        <>\n          <Header />\n          <Switch>\n            <Route path=\"/employee-page/turnout\" component={TurnoutInput} />\n            <Route path=\"/employee-page/protocol\">\n              <ProtocolInput setIsProtocolSent={changeProtocolSent} />\n            </Route>\n            <Route path=\"/employee-page/final\">\n              <FinalScreen isProtocolSent={isProtocolSent} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Employee;\n","import { AuthActionCreators } from './authReducer/action-creators';\n\nexport const allActionCreators = {\n  ...AuthActionCreators,\n};\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { allActionCreators } from '../store/reducers/action-creators';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(allActionCreators, dispatch);\n};\n","export default __webpack_public_path__ + \"static/media/eye-label.d06f4e35.svg\";","export default __webpack_public_path__ + \"static/media/login-page-logo.296fa5e3.svg\";","import classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { FC } from 'react';\nimport * as yup from 'yup';\n\nimport ErrorAlert from '../../components/ErrorAlert/ErrorAlert';\nimport FormButton from '../../components/FormButton/FormButton';\nimport FormInput from '../../components/FormInput/FormInput';\nimport Header from '../../components/Header/Header';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport { useActions } from '../../hooks/useActions';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport EyeSvg from '../../img/eye-label.svg';\nimport LogoSvg from '../../img/login-page-logo.svg';\nimport styles from './styles.module.scss';\n\nconst Login: FC = () => {\n  const { fetchLogin } = useActions();\n  const { errorLogin, isTryingToLogin } = useTypedSelector((state) => state.auth);\n  const validationSchema = yup.object().shape({\n    login: yup\n      .string()\n      .typeError('Должно быть строкой')\n      .trim()\n      .required('Обязательное поле'),\n    password: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\n  });\n  return (\n    <div className={styles['login-page']}>\n      <Header className={styles['login-page__header']} />\n      <div className={styles['login-page__picture']}>\n        <img src={LogoSvg} alt=\"Лого выборов мэра Москвы 2\" />\n      </div>\n      <div className={styles['login-page__content-container']}>\n        <div className={styles['content']}>\n          <Formik\n            initialValues={{ login: '', password: '' }}\n            validationSchema={validationSchema}\n            onSubmit={(values) => {\n              fetchLogin(values.login, values.password);\n            }}>\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isValid,\n            }) => (\n              <form onSubmit={handleSubmit} className={styles['login-form']}>\n                <ErrorAlert\n                  header=\"Неверный логин или пароль\"\n                  description=\"Проверьте вводимые данные\"\n                  className={classNames(\n                    styles['login-form__main-error'],\n                    errorLogin ? styles['login-form__main-error_showing'] : null,\n                  )}\n                />\n                <p className={styles['login-form__description']}>\n                  Введите логин и пароль\n                </p>\n\n                <FormInput\n                  labelName=\"Логин\"\n                  id=\"login\"\n                  name=\"login\"\n                  type=\"text\"\n                  value={values.login}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  errorMessage={errors.login || ''}\n                  required={true}\n                  showError={!!(touched.login && errors.login)}\n                />\n\n                <FormInput\n                  labelName=\"Пароль\"\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  errorMessage={errors.password || ''}\n                  required={true}\n                  showError={!!(touched.password && errors.password)}\n                  hasIcon\n                  iconUrl={EyeSvg}\n                />\n                <FormButton type=\"submit\" disabled={isTryingToLogin && !isValid}>\n                  {isTryingToLogin ? <LoadingSpinner /> : 'Войти'}\n                </FormButton>\n              </form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/user.7eb38d2d.svg\";","import { FC } from 'react';\n\nimport PhotoExample from '../../../img/user.svg';\nimport { ICandidate } from '../../../models/ICandidate';\nimport styles from './styles.module.scss';\n\ninterface PhotoItemProps {\n  candidate: ICandidate;\n}\n\nconst PhotoItem: FC<PhotoItemProps> = (props) => {\n  const { candidate, consigment, candidate_id, photo } = props.candidate;\n  return (\n    <div className={styles['photo-item']}>\n      <img\n        src={photo ? 'http://' + photo : PhotoExample}\n        alt={`${candidate_id}_${candidate}`}\n        className={styles['photo-item__img']}\n      />\n      <h2 className={styles['photo-item__surname']}>{candidate.split(' ')[0]}</h2>\n      <p className={styles['photo-item__name']}>\n        {' '}\n        {candidate.split(' ').slice(-2).join(' ')}\n      </p>\n      <p className={styles['photo-item__consigment']}>\n        {consigment === 'Самовыдвижение' ? consigment : `«${consigment}»`}\n      </p>\n    </div>\n  );\n};\n\nexport default PhotoItem;\n","import classNames from 'classnames';\nimport { FC } from 'react';\n\nimport { ICandidate } from '../../models/ICandidate';\nimport PhotoItem from './PhotoItem/PhotoItem';\nimport styles from './styles.module.scss';\n\ninterface PhotosListProps {\n  className?: string;\n  candidates: Array<ICandidate>;\n}\n\nconst PhotosList: FC<PhotosListProps> = ({ className, candidates }) => {\n  return (\n    <div\n      className={classNames(\n        styles['photo-list'],\n        candidates.length === 0 ? styles['photo-list_empty'] : null,\n        className ? className : null,\n      )}>\n      {candidates.length === 0 ? (\n        <div className={styles['photo-list__error']}>\n          <span className={styles['error-text']}>Список кандидатов пуст</span>\n        </div>\n      ) : (\n        candidates.map((item) => <PhotoItem key={item.candidate_id} candidate={item} />)\n      )}\n    </div>\n  );\n};\n\nexport default PhotosList;\n","import classNames from 'classnames';\nimport { FC, memo, useEffect, useState } from 'react';\n\nimport VotingService from '../../../../api/votingService';\nimport FormButton from '../../../../components/FormButton/FormButton';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport PhotosList from '../../../../components/PhotosList/PhotosList';\nimport { ICandidate } from '../../../../models/ICandidate';\nimport styles from './styles.module.scss';\n\nconst CandidatesList: FC = memo(function CandidatesList() {\n  const [areasInfo, setAreasInfo] = useState({\n    isOpenedCount: 0,\n    peopleCount: 0,\n  });\n  const [candidates, setCandidates] = useState<ICandidate[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const beautyNumber = (value: number) => {\n    return ('' + value)\n      .split('')\n      .reverse()\n      .reduce((prev, current, index) => {\n        return index % 3 === 0 && index !== 0\n          ? '' + prev + ' ' + current\n          : '' + prev + current;\n      })\n      .split('')\n      .reverse()\n      .join('');\n  };\n  const fetchInfo = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      setTimeout(async () => {\n        const result = (await VotingService.getCandidatesAndAreasInfo()).data;\n        setAreasInfo({\n          isOpenedCount: result.count_opened,\n          peopleCount: result.count_people,\n        });\n        setCandidates(result.info);\n        setIsLoading(false);\n      }, 500);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n\n  return (\n    <div\n      className={classNames(\n        styles['candidates'],\n        isError || isLoading ? styles['candidates_empty'] : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['candidates__loader']} isPrimaryColor />\n      ) : isError ? (\n        <div className={styles['candidates__error']}>\n          <span className={styles['error-text']}>Произошла ошибка</span>\n          <FormButton\n            type=\"button\"\n            disabled={false}\n            className={styles['error-btn']}\n            onClick={fetchInfo}>\n            Попробовать ещё раз\n          </FormButton>\n        </div>\n      ) : (\n        <>\n          <div\n            className={classNames(\n              styles['candidates__voting-areas'],\n              styles['voting-areas'],\n            )}>\n            <div className={styles['voting-areas__info-block']}>\n              <span className={styles['voting-areas__name']}>Участков открыто</span>\n              <div className={styles['voting-areas__value']}>\n                {beautyNumber(areasInfo.isOpenedCount)}\n              </div>\n            </div>\n            <div className={styles['voting-areas__info-block']}>\n              <span className={styles['voting-areas__name']}>\n                Число жителей на участках\n              </span>\n              <div className={styles['voting-areas__value']}>\n                {beautyNumber(areasInfo.peopleCount)}\n              </div>\n            </div>\n          </div>\n          <PhotosList\n            className={styles['candidates__candidates-list']}\n            candidates={candidates}\n          />\n        </>\n      )}\n    </div>\n  );\n});\n\nexport default CandidatesList;\n","import { useEffect, useState } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { FC, memo, useEffect, useState } from 'react';\n\nimport PhotoExample from '../../../img/user.svg';\nimport { ICandidateResult } from '../../../models/ICandidate';\nimport styles from './styles.module.scss';\n\ninterface ResultItemProps {\n  result: ICandidateResult;\n  isMobileScreen: boolean;\n}\n\nconst ResultItem: FC<ResultItemProps> = memo(function ResultItem(props) {\n  const [style, setStyle] = useState<any>(null);\n  const {\n    result: { candidate, result, photo },\n    isMobileScreen,\n  } = props;\n  useEffect(() => {\n    setTimeout(() => {\n      if (isMobileScreen) {\n        setStyle({\n          width: `calc( 50% * ${result * 0.01} )`,\n        });\n      } else {\n        setStyle({\n          height: `calc( 17vh * ${result * 0.01} )`,\n        });\n      }\n    }, 100);\n  }, [result, isMobileScreen]);\n  return (\n    <div className={styles['result-item']}>\n      <span className={styles['result-item__percent']}>{result}%</span>\n      <div className={styles['result-item__graph']} style={style}></div>\n      <div className={styles['result-item__candidate']}>\n        <img\n          src={photo ? 'http://' + photo : PhotoExample}\n          alt={`фото ${candidate}`}\n          className={styles['result-item__photo']}\n        />\n        <h2 className={styles['result-item__name']}>\n          <span>{candidate.split(' ')[1]}</span>\n          <span className={styles['result-item__name_uppercase']}>\n            {candidate.split(' ')[0]}\n          </span>\n        </h2>\n      </div>\n    </div>\n  );\n});\n\nexport default ResultItem;\n","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\n\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport { ICandidateResult } from '../../models/ICandidate';\nimport ResultItem from './ResultItem/ResultItem';\nimport styles from './styles.module.scss';\ninterface PhotosListProps {\n  className?: string;\n  candidates: Array<ICandidateResult>;\n}\n\nconst ResultsList: FC<PhotosListProps> = ({ className, candidates }) => {\n  const [isMobileScreen, setMobileScreen] = useState(\n    document.documentElement.clientWidth <= 1024,\n  );\n  const { width } = useWindowDimensions();\n\n  useEffect(() => {\n    if (width <= 1300 && !isMobileScreen) {\n      setMobileScreen(true);\n    } else if (width > 1300 && isMobileScreen) {\n      setMobileScreen(false);\n    }\n  }, [width]);\n\n  return (\n    <div className={classNames(styles['results-list'], className ? className : null)}>\n      {candidates\n        .sort((a, b) => {\n          if (a.result > b.result) {\n            return -1;\n          }\n          if (a.result < b.result) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((item) => (\n          <ResultItem\n            key={item.candidate_id}\n            result={item}\n            isMobileScreen={isMobileScreen}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default ResultsList;\n","import { useEffect, useRef } from 'react';\n\nfunction useInterval(callback: () => void, delay: number) {\n  const intervalRef = useRef(null as any);\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const tick = () => savedCallback.current();\n    if (typeof delay === 'number') {\n      intervalRef.current = window.setInterval(tick, delay);\n      return () => window.clearInterval(intervalRef.current);\n    }\n  }, [delay]);\n\n  return intervalRef;\n}\n\nexport default useInterval;\n","import React from 'react';\n\nimport Employee from '../pages/employee/Employee';\nimport Login from '../pages/login/Login';\nimport Main from '../pages/main/Main';\n\nexport interface IRoute {\n  path?: string;\n  component: React.ComponentType;\n  exact?: boolean;\n}\n\nexport enum RouteNames {\n  MAIN_PAGE = '/',\n  MAIN_PAGE_SCREENS = '/main',\n  LOGIN_PAGE = '/login',\n  EMPLOYEE_PAGE = '/employee-page',\n}\n\nexport const publicRoutes: IRoute[] = [\n  {\n    path: RouteNames.MAIN_PAGE,\n    exact: true,\n    component: Main,\n  },\n  {\n    path: RouteNames.MAIN_PAGE_SCREENS,\n    component: Main,\n  },\n  {\n    path: RouteNames.LOGIN_PAGE,\n    component: Login,\n  },\n];\n\nexport const privateRoutes: IRoute[] = [\n  {\n    path: RouteNames.EMPLOYEE_PAGE,\n    component: Employee,\n  },\n];\n","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\n\nimport VotingService from '../../../../api/votingService';\nimport FormButton from '../../../../components/FormButton/FormButton';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport ResultsList from '../../../../components/ResultsList/ResultsList';\nimport useInterval from '../../../../hooks/useInterval';\nimport styles from './styles.module.scss';\n\nconst Results: FC = () => {\n  const [votesInfo, setVotesInfo] = useState({\n    turnout: 0,\n    checked_bulletins: 0,\n  });\n  const [candidates, setCandidates] = useState<\n    {\n      candidate_id: number;\n      candidate: string;\n      result: number;\n    }[]\n  >([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const fetchInfo = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      setTimeout(async () => {\n        const result = (await VotingService.getResultsInfo()).data;\n        setVotesInfo({\n          turnout: result.turnout,\n          checked_bulletins: result.checked_bulletins_percentage,\n        });\n        setCandidates(result.candidate_results);\n        setIsLoading(false);\n      }, 500);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n\n  const silentFetchInfo = async () => {\n    try {\n      const result = (await VotingService.getResultsInfo()).data;\n      setVotesInfo({\n        turnout: result.turnout,\n        checked_bulletins: result.checked_bulletins_percentage,\n      });\n      setCandidates(result.candidate_results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n\n  useInterval(() => {\n    silentFetchInfo();\n  }, 15000);\n\n  return (\n    <div\n      className={classNames(\n        styles['results'],\n        isError || isLoading ? styles['results_empty'] : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['results__loader']} isPrimaryColor />\n      ) : isError ? (\n        <div className={styles['results__error']}>\n          <span className={styles['error-text']}>Произошла ошибка</span>\n          <FormButton\n            type=\"button\"\n            disabled={false}\n            className={styles['error-btn']}\n            onClick={fetchInfo}>\n            Попробовать ещё раз\n          </FormButton>\n        </div>\n      ) : (\n        <>\n          <div className={styles['results__statistics']}>\n            <p className={styles['info']}>\n              Явка - <span className={styles['info__result']}>{votesInfo.turnout}%</span>\n            </p>\n            <p className={styles['info']}>\n              Голосов обработано -{' '}\n              <span className={styles['info__result']}>\n                {votesInfo.checked_bulletins}%\n              </span>\n            </p>\n          </div>\n          <ResultsList className={styles['results__list']} candidates={candidates} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","import { FC, memo, useEffect, useState } from 'react';\n\nimport styles from './styles.module.scss';\n\ninterface TurnoutItemProps {\n  turnoutInfo: {\n    district: string;\n    turnout: number;\n  };\n  isMobileScreen: boolean;\n}\n\nconst TurnoutItem: FC<TurnoutItemProps> = memo(function TurnoutItem(props) {\n  const [style, setStyle] = useState<any>(null);\n  const {\n    turnoutInfo: { turnout, district },\n    isMobileScreen,\n  } = props;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setStyle({\n        width: `calc( ${isMobileScreen ? 35 : 65}% * ${turnout * 0.01} )`,\n      });\n    }, 100);\n  }, [turnout, isMobileScreen]);\n\n  return (\n    <div className={styles['turnout-item']}>\n      <h3 className={styles['turnout-item__district']}>{district}</h3>\n      <div className={styles['turnout-item__graph']} style={style} />\n      <span className={styles['turnout-item__percent']}>{Math.floor(turnout)}%</span>\n    </div>\n  );\n});\n\nexport default TurnoutItem;\n","import classNames from 'classnames';\nimport { FC, useContext, useEffect, useState } from 'react';\n\nimport VotingService from '../../api/votingService';\nimport TimeContext from '../../context/timeContext';\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport FormButton from '../FormButton/FormButton';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport styles from './styles.module.scss';\nimport TurnoutItem from './TurnoutItem/TurnoutItem';\n\ninterface TurnoutListProps {\n  className?: string;\n}\n\nconst TurnoutList: FC<TurnoutListProps> = ({ className }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [turnout, setTurnout] = useState<\n    {\n      district: string;\n      turnout: number;\n    }[]\n  >([]);\n  const [isMobileScreen, setMobileScreen] = useState(\n    document.documentElement.clientWidth <= 768,\n  );\n  const { width } = useWindowDimensions();\n  const {\n    time: { minutes, hours },\n  } = useContext(TimeContext);\n\n  const fetchTurnout = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      setTimeout(async () => {\n        const result = (await VotingService.getDistrictsTurnout()).data;\n        setTurnout(result.districts_turnout);\n        setIsLoading(false);\n      }, 500);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n\n  const fetchTurnoutSilent = async () => {\n    try {\n      const result = (await VotingService.getDistrictsTurnout()).data;\n      setTurnout(result.districts_turnout);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTurnout();\n  }, []);\n\n  useEffect(() => {\n    if ((hours === 15 && minutes === 0) || (hours === 18 && minutes === 0)) {\n      fetchTurnoutSilent();\n    }\n  }, [minutes, hours]);\n\n  useEffect(() => {\n    if (width <= 768 && !isMobileScreen) {\n      setMobileScreen(true);\n    } else if (width > 768 && isMobileScreen) {\n      setMobileScreen(false);\n    }\n  }, [width]);\n  return (\n    <div\n      className={classNames(\n        styles['turnout-list'],\n        isError || isLoading || turnout.length === 0\n          ? styles['turnout-list_empty']\n          : null,\n        className ? className : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['turnout-list__loader']} isPrimaryColor />\n      ) : isError || turnout.length === 0 ? (\n        <div className={styles['turnout-list__error']}>\n          {turnout.length === 0 ? (\n            <span className={styles['error-text']}>Список пустой</span>\n          ) : (\n            <>\n              <span className={styles['error-text']}>Произошла ошибка</span>\n              <FormButton\n                type=\"button\"\n                disabled={false}\n                className={styles['error-btn']}\n                onClick={fetchTurnout}>\n                Попробовать ещё раз\n              </FormButton>\n            </>\n          )}\n        </div>\n      ) : (\n        turnout.map((item, index) => (\n          <TurnoutItem key={index} turnoutInfo={item} isMobileScreen={isMobileScreen} />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default TurnoutList;\n","import { FC, useContext } from 'react';\n\nimport TurnoutList from '../../../../components/TurnoutList/TurnoutList';\nimport TimeContext from '../../../../context/timeContext';\nimport styles from './styles.module.scss';\n\nconst Turnout: FC = () => {\n  const {\n    time: { hours },\n  } = useContext(TimeContext);\n\n  const showHour = () => {\n    if (hours >= 12 && hours < 15) return '12';\n    if (hours >= 15 && hours < 18) return '15';\n    if (hours >= 18 && hours < 21) return '18';\n  };\n\n  return (\n    <div className={styles['turnout']}>\n      <h2 className={styles['turnout__header']}>\n        Явка на&nbsp;<span className={styles['clock']}>{showHour()}:00</span>\n      </h2>\n      <TurnoutList className={styles['turnout__list']} />\n    </div>\n  );\n};\n\nexport default Turnout;\n","import { FC, useContext, useEffect } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Header from '../../components/Header/Header';\nimport TimeContext from '../../context/timeContext';\nimport history from '../../utils/history';\nimport CandidatesList from './pages/candidatesList/CandidatesList';\nimport Results from './pages/results/Results';\nimport Turnout from './pages/turnout/Turnout';\nimport styles from './styles.module.scss';\n\nconst Main: FC = () => {\n  const {\n    time: { minutes, hours },\n    isDevNextDaySet,\n    votingDate,\n  } = useContext(TimeContext);\n\n  useEffect(() => {\n    if (isDevNextDaySet || votingDate.getDay() < new Date().getDay()) {\n      history.push('/main/results');\n    } else {\n      if (hours < 12 && history.location.pathname !== '/main/candidates-list') {\n        history.push('/main/candidates-list');\n      }\n      if (\n        (hours === 12 && minutes === 0) ||\n        (hours >= 12 && hours < 21 && history.location.pathname !== '/main/turnout')\n      ) {\n        history.push('/main/turnout');\n      }\n      if (\n        (hours === 21 && minutes === 0) ||\n        (hours >= 21 && history.location.pathname !== '/main/results')\n      ) {\n        history.push('/main/results');\n      }\n    }\n  }, [minutes, hours, isDevNextDaySet]);\n\n  return (\n    <div className={styles['main']}>\n      <Header className={styles['main__header']} />\n      <Switch>\n        <Route path=\"/main/candidates-list\" component={CandidatesList} />\n        <Route path=\"/main/turnout\" component={Turnout} />\n        <Route path=\"/main/results\" component={Results} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { RouteNames } from '../../routes';\nimport styles from './styles.module.css';\n\nconst NotFound: FC = () => {\n  return (\n    <div className={styles['container']}>\n      <p>Упс, страница не найдена</p>\n      <NavLink className={styles['button']} to={RouteNames.MAIN_PAGE}>\n        На главную\n      </NavLink>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { FC } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport NotFound from '../pages/notFound/NotFound';\nimport { privateRoutes, publicRoutes } from '../routes';\n\nconst AppRouter: FC = () => {\n  return (\n    <Switch>\n      {publicRoutes.map((route) => (\n        <Route\n          path={route.path}\n          exact={route.exact}\n          component={route.component}\n          key={route.path}\n        />\n      ))}\n      {privateRoutes.map((route) => (\n        <Route\n          path={route.path}\n          exact={route.exact}\n          component={route.component}\n          key={route.path}\n        />\n      ))}\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import classNames from 'classnames';\nimport { FC, FormEvent, useContext, useEffect, useState } from 'react';\n\nimport TimeContext from '../../context/timeContext';\nimport styles from './styles.module.scss';\n\nconst DevTimeInput: FC = () => {\n  const [hours, setHours] = useState('0');\n  const [minutes, setMinutes] = useState('0');\n  const [isNextDay, setIsNextDay] = useState(false);\n  const [isDevUsing, setIsDevUsing] = useState(false);\n  const { setCustomTime, clearCustomTime, time, isDevNextDaySet } =\n    useContext(TimeContext);\n  useEffect(() => {\n    let savedHours = localStorage.getItem('devTimeHours');\n    let savedMinutes = localStorage.getItem('devTimeMinutes');\n    let realTimeSeconds = localStorage.getItem('devRealTimeSeconds');\n    let savedIsNextDay = localStorage.getItem('devIsNextDay');\n    if (savedHours && savedMinutes && realTimeSeconds) {\n      setCustomTime(\n        parseInt(savedHours, 10),\n        parseInt(savedMinutes, 10),\n        !!savedIsNextDay,\n        parseInt(realTimeSeconds, 10),\n      );\n      setIsDevUsing(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isDevUsing) {\n      setHours(time.hours.toString());\n      setMinutes(time.minutes.toString());\n      setIsNextDay(isDevNextDaySet);\n    }\n  }, [isDevUsing, time, isDevNextDaySet]);\n\n  return (\n    <form\n      className={classNames(\n        styles['dev-time'],\n        isDevUsing ? styles['dev-time_using'] : null,\n      )}\n      onSubmit={(e) => {\n        e.preventDefault();\n        setCustomTime(\n          parseInt(hours, 10),\n          parseInt(minutes, 10),\n          isNextDay,\n          Math.floor(new Date().getTime() / 1000),\n        );\n        setIsDevUsing(true);\n        localStorage.setItem('devTimeHours', hours.toString());\n        localStorage.setItem('devTimeMinutes', minutes.toString());\n        if (isNextDay) localStorage.setItem('devIsNextDay', 'true');\n        localStorage.setItem(\n          'devRealTimeSeconds',\n          Math.floor(new Date().getTime() / 1000).toString(),\n        );\n      }}>\n      <label htmlFor=\"hours\">\n        часы{' '}\n        <input\n          type=\"number\"\n          id=\"hours\"\n          value={hours}\n          onChange={(e: FormEvent<HTMLInputElement>) => {\n            setHours(e.currentTarget.value);\n          }}\n          required\n        />\n      </label>\n\n      <label htmlFor=\"minutes\">\n        минуты{' '}\n        <input\n          type=\"number\"\n          id=\"minutes\"\n          value={minutes}\n          onChange={(e: FormEvent<HTMLInputElement>) => setMinutes(e.currentTarget.value)}\n          required\n        />\n      </label>\n\n      <label htmlFor=\"isnextday\">\n        <input\n          type=\"checkbox\"\n          id=\"isnextday\"\n          name=\"isnextday\"\n          checked={isNextDay}\n          onChange={(e: FormEvent<HTMLInputElement>) =>\n            setIsNextDay(e.currentTarget.checked)\n          }\n        />\n        Следующий день\n      </label>\n\n      <button type=\"submit\">Изменить</button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          clearCustomTime();\n          setHours('0');\n          setMinutes('0');\n          setIsNextDay(false);\n          setIsDevUsing(false);\n          localStorage.removeItem('devTimeHours');\n          localStorage.removeItem('devTimeMinutes');\n          localStorage.removeItem('devRealTimeSeconds');\n          localStorage.removeItem('devIsNextDay');\n        }}>\n        Очистить\n      </button>\n      {isDevUsing ? <small>Используются тестовые значения!</small> : null}\n    </form>\n  );\n};\n\nexport default DevTimeInput;\n","import './App.css';\n\nimport { FC, useEffect } from 'react';\n\nimport AppRouter from './components/AppRouter';\nimport DevTimeInput from './components/DevTimeInput/DevTimeInput';\nimport TimeContext from './context/timeContext';\nimport { useActions } from './hooks/useActions';\nimport { useDate } from './hooks/useDate';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport { RouteNames } from './routes';\nimport history from './utils/history';\n\nconst App: FC = () => {\n  const { fetchRefreshTokens } = useActions();\n  const { access_token, isFirstRefreshDone } = useTypedSelector((state) => state.auth);\n  const { time, isDevNextDaySet, votingDate, setCustomTime, clearCustomTime } = useDate();\n\n  useEffect(() => {\n    fetchRefreshTokens();\n  }, []);\n\n  useEffect(() => {\n    if (isFirstRefreshDone) {\n      if (history.location.pathname === RouteNames.LOGIN_PAGE) {\n        if (access_token) history.push(RouteNames.EMPLOYEE_PAGE);\n      }\n      if (history.location.pathname.includes(RouteNames.EMPLOYEE_PAGE)) {\n        if (!access_token) history.push(RouteNames.LOGIN_PAGE);\n      }\n    }\n  }, [access_token, history.location.pathname, isFirstRefreshDone]);\n  return (\n    <TimeContext.Provider\n      value={{ time, votingDate, isDevNextDaySet, setCustomTime, clearCustomTime }}>\n      <div className=\"wrapper\">\n        <DevTimeInput />\n        {!isFirstRefreshDone ? <span>Загрузка</span> : <AppRouter />}\n      </div>\n    </TimeContext.Provider>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nimport VotingService from '../api/votingService';\nimport useInterval from './useInterval';\n\nexport const useDate = () => {\n  const [date, setDate] = useState(new Date());\n  const [votingDate, setVotingDate] = useState(new Date());\n  const [devTime, setDevTime] = useState<\n    { hours: number; minutes: number; realTimeInSeconds: number } | null | undefined\n  >(undefined);\n  const [isDevNextDaySet, setIsDevNextDaySet] = useState(false);\n\n  const fetchVotingDate = async () => {\n    try {\n      const result = (await VotingService.getVotingDate()).data;\n      setVotingDate(new Date(result.voting_date));\n    } catch (e) {\n      return;\n    }\n  };\n\n  useEffect(() => {\n    fetchVotingDate();\n  }, []);\n\n  const updateDevTime = (curTime?: Date) => {\n    const currentTime = curTime || new Date();\n    let passedSeconds =\n      Math.floor(currentTime.getTime() / 1000) - devTime!.realTimeInSeconds;\n    let passedHours = Math.floor(passedSeconds / 3600);\n    let passedMinutes = Math.floor((passedSeconds - passedHours * 3600) / 60);\n    setDate(\n      new Date(\n        currentTime.getFullYear(),\n        currentTime.getMonth(),\n        currentTime.getDay(),\n        devTime!.hours + passedHours,\n        devTime!.minutes + passedMinutes,\n      ),\n    );\n  };\n\n  useInterval(() => {\n    const currentTime = new Date();\n    if (devTime) {\n      if (\n        (Math.floor(currentTime.getTime() / 1000) - devTime.realTimeInSeconds) % 60 ===\n          0 &&\n        Math.floor(currentTime.getTime() / 1000) - devTime.realTimeInSeconds !== 0\n      ) {\n        updateDevTime(currentTime);\n      }\n    } else {\n      if (currentTime.getSeconds() === 0) setDate(currentTime);\n    }\n  }, 1000);\n\n  useEffect(() => {\n    const time = new Date();\n    if (!devTime) setDate(time);\n    else updateDevTime(time);\n  }, [devTime]);\n\n  const setCustomTime = (\n    hours: number,\n    minutes: number,\n    isNextDay?: boolean,\n    realTimeInSeconds?: number,\n  ) => {\n    setDevTime({\n      hours,\n      minutes,\n      realTimeInSeconds: realTimeInSeconds || Math.floor(new Date().getTime() / 1000),\n    });\n    setIsDevNextDaySet(!!isNextDay);\n  };\n\n  const clearCustomTime = () => {\n    setDevTime(null);\n    setIsDevNextDaySet(false);\n  };\n\n  return {\n    isDevNextDaySet,\n    votingDate,\n    time: {\n      hours: date.getHours(),\n      minutes: date.getMinutes(),\n    },\n    setCustomTime,\n    clearCustomTime,\n  };\n};\n","import './styles/normalize.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\n\nimport App from './App';\nimport { store } from './store';\nimport history from './utils/history';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-page\":\"styles_login-page__2N2_e\",\"login-page__header\":\"styles_login-page__header__CwIK-\",\"login-page__picture\":\"styles_login-page__picture__1JfiC\",\"login-page__content-container\":\"styles_login-page__content-container__2j19G\",\"content\":\"styles_content__2Mzyn\",\"login-form\":\"styles_login-form__2mJDG\",\"login-form__description\":\"styles_login-form__description__TBp_p\",\"login-form__main-error\":\"styles_login-form__main-error__1nbnt\",\"login-form__main-error_showing\":\"styles_login-form__main-error_showing__19QVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result-item\":\"styles_result-item__1ZrcL\",\"result-item__percent\":\"styles_result-item__percent__20SNg\",\"result-item__graph\":\"styles_result-item__graph__2sG-B\",\"result-item__candidate\":\"styles_result-item__candidate__1xKvy\",\"result-item__photo\":\"styles_result-item__photo__1E3jm\",\"result-item__name\":\"styles_result-item__name__12St9\",\"result-item__name_uppercase\":\"styles_result-item__name_uppercase__1Mw-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"turnout-list\":\"styles_turnout-list__31Bgo\",\"turnout-list_empty\":\"styles_turnout-list_empty__2BY7D\",\"turnout-list__error\":\"styles_turnout-list__error__1usZt\",\"error-text\":\"styles_error-text__2jdZF\",\"error-btn\":\"styles_error-btn__2t6iU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup__background\":\"styles_popup__background__RRYjn\",\"popup__content\":\"styles_popup__content__2uzKH\",\"popup__props\":\"styles_popup__props__1Pd1_\",\"popup__buttons-block\":\"styles_popup__buttons-block__3K2nm\",\"popup__button\":\"styles_popup__button__PIosN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-alert\":\"styles_error-alert__3ro0p\",\"error-alert__icon\":\"styles_error-alert__icon__1hlEB\",\"error-alert__content\":\"styles_error-alert__content__2b48I\",\"error-alert__header\":\"styles_error-alert__header__3akAw\",\"error-alert__description\":\"styles_error-alert__description__3WtY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo-item\":\"styles_photo-item__m7oOD\",\"photo-item__img\":\"styles_photo-item__img__1QgZI\",\"photo-item__surname\":\"styles_photo-item__surname__33mco\",\"photo-item__name\":\"styles_photo-item__name__17yFg\",\"photo-item__consigment\":\"styles_photo-item__consigment__1TKbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2dQfB\",\"header__clock\":\"styles_header__clock__1_RRe\",\"header__logo\":\"styles_header__logo__3woUs\",\"header__clock_hidden\":\"styles_header__clock_hidden__3TNIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__2e3yv\",\"final__content\":\"styles_final__content__29jdu\",\"final__header\":\"styles_final__header__1N7Gd\",\"final__button\":\"styles_final__button__3rGtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo-list\":\"styles_photo-list__I-PQD\",\"photo-list_empty\":\"styles_photo-list_empty__dCuTt\",\"photo-list__error\":\"styles_photo-list__error__kmi0k\",\"error-text\":\"styles_error-text__3ju8S\",\"error-btn\":\"styles_error-btn__3ikSf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"turnout-item\":\"styles_turnout-item__3m59A\",\"turnout-item__district\":\"styles_turnout-item__district__jTQ6J\",\"turnout-item__graph\":\"styles_turnout-item__graph__3pCm2\",\"turnout-item__percent\":\"styles_turnout-item__percent__2A4_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"turnout\":\"styles_turnout__1CB4i\",\"turnout__header\":\"styles_turnout__header__2_1VN\",\"clock\":\"styles_clock__NR3Pw\",\"turnout__list\":\"styles_turnout__list__2ygO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"protocol\":\"styles_protocol__2Ea4p\",\"protocol_empty\":\"styles_protocol_empty__2wJy_\",\"protocol__error\":\"styles_protocol__error__3GD3h\",\"error-text\":\"styles_error-text__3licd\",\"error-btn\":\"styles_error-btn__XpIa2\",\"protocol__form\":\"styles_protocol__form__10o8a\",\"protocol-form\":\"styles_protocol-form__3HE0s\",\"protocol-form__wrapper\":\"styles_protocol-form__wrapper__3dBRn\",\"protocol-form__bulletins\":\"styles_protocol-form__bulletins__1SjkQ\",\"bulletins__input\":\"styles_bulletins__input__lhpDj\",\"bulletins__input-error\":\"styles_bulletins__input-error__3Y5qI\",\"protocol-form__votes\":\"styles_protocol-form__votes__4q8Fe\",\"votes__candidate-list\":\"styles_votes__candidate-list__1Z6Vp\",\"votes__input-block\":\"styles_votes__input-block__1qSEU\",\"votes__input-block_error\":\"styles_votes__input-block_error__arxb1\",\"votes__label\":\"styles_votes__label__2aD7I\",\"votes__input\":\"styles_votes__input__J4k3x\",\"protocol-form__description\":\"styles_protocol-form__description__1SWlH\",\"protocol-form__main-error\":\"styles_protocol-form__main-error__34sRy\",\"protocol-form__main-error_hidden\":\"styles_protocol-form__main-error_hidden__1utUy\",\"protocol-form__time-left\":\"styles_protocol-form__time-left__1fF-H\",\"protocol-form__time-left_hidden\":\"styles_protocol-form__time-left_hidden__m8zlh\",\"protocol-form__submit-btn\":\"styles_protocol-form__submit-btn__1IhtF\",\"bulletins__input-block\":\"styles_bulletins__input-block__2rdhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-button\":\"styles_form-button__1a9eb\",\"form-button_color_red\":\"styles_form-button_color_red__1zg2o\",\"form-button_color_gray\":\"styles_form-button_color_gray__3uLGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__3kNkA\",\"spinner_primary-color\":\"styles_spinner_primary-color__3-KJ3\",\"spin\":\"styles_spin__MjjZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__24-fu\",\"main__header\":\"styles_main__header__y51-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__20my1\",\"button\":\"styles_button__3omc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dev-time\":\"styles_dev-time__18MSc\",\"dev-time_using\":\"styles_dev-time_using__3RbwX\"};"],"sourceRoot":""}